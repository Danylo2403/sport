{"version":3,"file":"static/js/345.0f95efa1.chunk.js","mappings":"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","sources":["components/Icon/Icon.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/UserPage/styles/container.js","components/UserPage/styles/avatar.js","components/UserPage/styles/text.js","components/UserPage/styles/badge.js","components/UserPage/styles/card.js","components/UserPage/styles/formlabel.js","components/UserPage/styles/input.js","components/UserPage/styles/button.js","components/UserPage/mods/Theme.js","components/UserPage/styles/Icon.styled.js","components/UserPage/UserCard.jsx","components/UserPage/styles/field.styled.js","components/UserPage/UserForm.jsx","components/UserPage/ProfilePage.js","pages/UserPage.jsx"],"sourcesContent":["import sprite from '../../img/pulse-icons.svg';\n\nimport React from 'react';\n\nexport const Icon = ({ width, height, iconid }) => {\n  return (\n    <svg width={width} height={height}>\n      <use href={`${sprite}#${iconid}`}></use>\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n  font-size: 32px;\n  line-height: 44px;\n`;\n","import React from 'react';\nimport { TitleText } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleText>{title}</TitleText>;\n};\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/styled-system';\n\nconst baseStyle = defineStyle({\n  w: '100%',\n  h: '100%',\n  mx: 'auto',\n  minW: '375px',\n  maxW: '1440px',\n  px: '5',\n  py: '10',\n});\n\nexport const containerStyle = defineStyleConfig({\n  baseStyle,\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/react';\n\nconst container = defineStyle({\n  w: '90px',\n  h: '90px',\n  border: '1px solid #e6533c',\n\n  bg: 'rgba(48, 48, 48, 0.3)',\n});\n\nexport const avatarStyles = defineStyleConfig({\n  baseStyle: {\n    container,\n  },\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/react';\n\nconst baseStyle = defineStyle({\n  fontFamily: 'inherit',\n  fontWeight: 'normal',\n  color: '#efede8',\n});\n\nexport const textStyles = defineStyleConfig({\n  baseStyle,\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/react';\n\nconst baseStyle = defineStyle({\n  bgColor: 'transparent',\n\n  fontWeight: 'normal',\n  textAlign: 'center',\n  textTransform: 'none',\n  color: 'rgba(239, 237, 232, 0.5)',\n});\n\nexport const badgeStyles = defineStyleConfig({\n  baseStyle,\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/styled-system';\n\nconst baseStyle = defineStyle({\n  container: {\n    p: '14px',\n    border: '1px solid rgba(239, 237, 232, 0.2)',\n    borderRadius: '12px',\n\n    bgColor: '#e6533c',\n  },\n  header: {\n    p: 0,\n\n    fontSize: '12px',\n  },\n  footer: {\n    p: 0,\n\n    fontSize: { base: '18px', md: '24px' },\n  },\n});\n\nexport const cardStyles = defineStyleConfig({\n  baseStyle,\n  variants: 'unstyled',\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/styled-system';\n\nconst baseStyle = defineStyle({\n  display: 'flex',\n  mx: 0,\n  fontWeight: 'normal',\n  transitionProperty: 'common',\n  transitionDuration: 'normal',\n  opacity: 1,\n  _disabled: {\n    opacity: 0.4,\n  },\n});\n\nexport const formLabelStyles = defineStyleConfig({\n  baseStyle,\n});\n","import { inputAnatomy as parts } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system';\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(parts.keys);\n\nconst baseStyle = definePartsStyle({\n  field: {\n    width: '100%',\n    color: '#efede8',\n    p: '14px',\n    borderRadius: '12px',\n    minWidth: 0,\n    outline: 0,\n    position: 'relative',\n    appearance: 'none',\n    transitionProperty: 'common',\n    transitionDuration: 'normal',\n    _placeholder: {\n      color: '#efede8',\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: 'not-allowed',\n    },\n  },\n});\n\nconst variantOutline = definePartsStyle(props => {\n  return {\n    field: {\n      bg: 'inherit',\n      boxShadow: 'none',\n      _hover: {\n        borderColor: '#e6533c',\n      },\n      _invalid: {\n        borderColor: '#d80027',\n        boxShadow: 'none',\n      },\n      _valid: {\n        borderColor: '#3cbf61',\n        boxShadow: 'none',\n      },\n      _focus: {\n        borderColor: '#e6533c',\n      },\n      _focusVisible: {\n        border: '1px solid',\n        boxShadow: 'none',\n        _placeholder: {\n          color: '#efede8',\n        },\n      },\n    },\n  };\n});\n\nconst variants = {\n  outline: variantOutline,\n};\n\nexport const inputStyles = defineMultiStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: 'outline',\n  },\n});\n","import { defineStyle, defineStyleConfig } from '@chakra-ui/react';\n\nconst solid = defineStyle({\n  border: '1px solid',\n  borderRadius: '12px',\n  borderColor: '#e6533c',\n\n  color: 'rgba(239, 237, 232, 0.6)',\n  fontWeight: 'medium',\n  bgColor: '#e6533c',\n  transitionProperty: 'common',\n  transitionDuration: 'normal',\n\n  _hover: {\n    borderColor: '#ef8964',\n\n    color: '#efede8',\n    bgColor: '#ef8964',\n  },\n});\n\nconst sizes = defineStyle({\n  base: {\n    px: '40px',\n    py: '12px',\n\n    fontSize: '15px',\n    lineHeight: '112%',\n  },\n  md: {\n    px: '50px',\n    py: '16px',\n\n    fontSize: '20px',\n    lineHeight: '112%',\n  },\n});\n\nexport const buttonStyles = defineStyleConfig({\n  sizes,\n  variants: { solid },\n});\n","import { extendTheme } from '@chakra-ui/react';\nimport { containerStyle } from '../styles/container';\nimport { avatarStyles } from '../styles/avatar';\nimport { textStyles } from '../styles/text';\nimport { badgeStyles } from '../styles/badge';\nimport { cardStyles } from '../styles/card';\nimport { formLabelStyles } from '../styles/formlabel';\nimport { inputStyles } from '../styles/input';\nimport { buttonStyles } from '../styles/button';\n\nexport const theme = extendTheme({\n  styles: {\n    global: {\n      'html, body': {\n        fontFamily: 'Roboto, sans-serif',\n        bgColor: '#040404',\n      },\n      'h1, p': {\n        m: 0,\n        p: 0,\n      },\n    },\n    colors: {\n      brand: {\n        black: '#040404',\n        orange: '#e6533c',\n        orange1: '#ef8964',\n        beige: '#efa082',\n        white: '#efede8',\n      },\n    },\n  },\n  breakpoints: {\n    base: '0px',\n    sm: null,\n    md: '768px',\n    lg: null,\n    xl: '1281px',\n    '2xl': '1536px',\n  },\n  components: {\n    Container: containerStyle,\n    Avatar: avatarStyles,\n    Text: textStyles,\n    Badge: badgeStyles,\n    Card: cardStyles,\n    FormLabel: formLabelStyles,\n    Input: inputStyles,\n    Button: buttonStyles,\n  },\n});\n","import styled from 'styled-components';\nimport { Icon } from 'components/Icon/Icon';\n\nexport const AvatarIcon = styled(Icon)``;\n\nexport const AddAvatarIcon = styled(Icon)``;\n\nexport const FoodIcon = styled(Icon)``;\n\nexport const DumbBellIcon = styled(Icon)``;\n\nexport const ExclamationMarkIcon = styled(Icon)``;\n\nexport const LogOut = styled(Icon)``;\n","import {\n  AvatarIcon,\n  AddAvatarIcon,\n  FoodIcon,\n  DumbBellIcon,\n  LogOut,\n  ExclamationMarkIcon,\n} from './styles/Icon.styled.js';\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Card,\n  CardFooter,\n  CardHeader,\n  HStack,\n  Stack,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\n\n//------------------------------------------------\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useAuth } from 'components/hooks/AuthHook.js';\nimport {\n  fetchUserLogout,\n  fetchUserCurrent,\n  fetchUserAvatars,\n} from '../../redux/user/operations.js';\n\n//------------------------------------------------\nexport const UserCard = () => {\n  const dispatch = useDispatch();\n  const { user, bmr, dailyRateSports } = useAuth();\n\n  useEffect(() => {\n    dispatch(fetchUserCurrent());\n  }, [dispatch]);\n\n  return (\n    <Stack>\n      <VStack spacing={{ base: '40px', md: '32px' }}>\n        <VStack spacing=\"32px\">\n          <VStack>\n            <Avatar\n              icon={\n                <AvatarIcon iconid={'avatar'} width={'38px'} height={'38px'} />\n              }\n              pos=\"relative\"\n              w={{ base: '90px', md: '150px' }}\n              h={{ base: '90px', md: '150px' }}\n            >\n              <Button\n                type=\"submit\"\n                onClick={() => dispatch(fetchUserAvatars())}\n                pos=\"absolute\"\n                right={{ base: '18px', md: '50px' }}\n                bottom={{ base: '-14px', md: '-14px' }}\n                h=\"auto\"\n                p=\"0\"\n                variant=\"unstyled\"\n              >\n                <AddAvatarIcon\n                  iconid={'add-avatar'}\n                  width={'32px'}\n                  height={'32px'}\n                />\n              </Button>\n            </Avatar>\n          </VStack>\n\n          <VStack>\n            <Text\n              fontSize={{ base: '18px', md: '24px' }}\n              lineHeight={{ base: '111%', md: '117%' }}\n              mb={{ base: '4px', mb: '8px' }}\n            >\n              {user.name}\n            </Text>\n            <Badge display=\"inline-flex\" fontSize=\"14px\" lineHeight=\"129%\">\n              User\n            </Badge>\n          </VStack>\n        </VStack>\n\n        <HStack spacing={{ base: '12px', md: '16px' }}>\n          <Card\n            direction=\"column\"\n            justify=\"space-between\"\n            align=\"flex-start\"\n            w={{ base: '165px', md: '214px', xl: '209px' }}\n            h={{ base: '96px', md: '108px' }}\n          >\n            <CardHeader>\n              <HStack>\n                <FoodIcon iconid={'food'} width={'20px'} height={'20px'} />\n                <Text\n                  color=\"rgba(239, 237, 232, 0.8)\"\n                  lineHeight={{ base: '133%', md: '150%' }}\n                >\n                  Daily calorie intake\n                </Text>\n              </HStack>\n            </CardHeader>\n            <CardFooter>\n              <Text lineHeight={{ base: '111%', md: '133%' }}>{bmr}</Text>\n            </CardFooter>\n          </Card>\n          <Card\n            direction=\"column\"\n            justify=\"space-between\"\n            align=\"flex-start\"\n            w={{ base: '165px', md: '214px', xl: '209px' }}\n            h={{ base: '96px', md: '108px' }}\n          >\n            <CardHeader>\n              <HStack>\n                <DumbBellIcon\n                  iconid={'dumbbell'}\n                  width={'20px'}\n                  height={'20px'}\n                />\n                <Text\n                  color=\"rgba(239, 237, 232, 0.8)\"\n                  line-height={{ base: '133%', md: '150%' }}\n                >\n                  Daily physical activity\n                </Text>\n              </HStack>\n            </CardHeader>\n            <CardFooter>\n              <Text lineHeight={{ base: '111%', md: '133%' }}>\n                {dailyRateSports} min\n              </Text>\n            </CardFooter>\n          </Card>\n        </HStack>\n\n        <HStack spacing={2} align=\"flex-start\">\n          <Stack\n            justify=\"center\"\n            align=\"center\"\n            borderRadius=\"50px\"\n            boxSize=\"24px\"\n            bgColor=\"#efa082\"\n          >\n            <ExclamationMarkIcon\n              iconid={'exclamation-mark'}\n              width={'2px'}\n              height={'16px'}\n            />\n          </Stack>\n          <Text\n            w={{ base: '303px', md: '407px' }}\n            h=\"73px\"\n            fontSize={{ base: '14px', md: '16px' }}\n            lineHeight={{ base: '129%', md: '150%' }}\n          >\n            We understand that each individual is unique, so the entire approach\n            to diet is relative and tailored to your unique body and goals.\n          </Text>\n        </HStack>\n\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(fetchUserLogout())}\n          rightIcon={\n            <LogOut iconid={'log-out'} width={'20px'} height={'20px'} />\n          }\n          display=\"inline-flex\"\n          alignContent=\"center\"\n          alignSelf=\"flex-end\"\n          iconSpacing=\"8px\"\n          h=\"auto\"\n          p=\"0\"\n          fontSize={{ base: '14px', md: '16px' }}\n          fontWeight=\"normal\"\n          variant=\"unstyled\"\n        >\n          Logout\n        </Button>\n      </VStack>\n    </Stack>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Radio = styled(Field)`\n  width: 18px;\n  height: 18px;\n  margin-right: 9px;\n\n  color: #ef8964;\n\n  border: 1.5px solid currentColor;\n  border-radius: 50%;\n\n  transform: translateY(0.18rem);\n\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    box-shadow: inset 10px 10px #ef8964;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n  }\n\n  &:hover:before,\n  &:checked:before {\n    transform: scale(1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n\n    transform: translateY(0.2rem);\n  }\n`;\n","import { Formik } from 'formik';\nimport { object, string, number, date } from 'yup';\n\nimport {\n  Input,\n  FormControl,\n  FormLabel,\n  Stack,\n  FormErrorMessage,\n  VStack,\n  HStack,\n  RadioGroup,\n  Text,\n  Button,\n} from '@chakra-ui/react';\nimport { Radio } from './styles/field.styled';\n\n//----------------------------------------------------\nimport { CheckCircleIcon } from '@chakra-ui/icons';\n\n//----------------------------------------------------\nimport { useDispatch } from 'react-redux';\nimport { fetchUserParams } from '../../redux/user/operations';\nimport { useAuth } from 'components/hooks/AuthHook';\n\n//----------------------------------------------------\nconst validation = object({\n  name: string().min(3, 'Name too short!').max(33, 'Name too long!'),\n  height: number().min(50, 'Height too small').integer().required('Required'),\n  currentWeight: number()\n    .min(45, 'Weight too low')\n    .integer()\n    .required('Required'),\n  desiredWeight: number()\n    .min(45, 'Weight too low')\n    .integer()\n    .required('Required'),\n  birthday: date()\n    .nullable()\n    .default(() => new Date()),\n});\n\n//----------------------------------------------------\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  const handleSubmit = values => {\n    const {\n      name,\n      blood,\n      sex,\n      height,\n      currentWeight,\n      desiredWeight,\n      birthday,\n      levelActivity,\n    } = values;\n\n    dispatch(\n      fetchUserParams({\n        name: name,\n        blood: Number(blood),\n        sex: sex,\n        height: height,\n        currentWeight: currentWeight,\n        desiredWeight: desiredWeight,\n        birthday: birthday,\n        levelActivity: Number(levelActivity),\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        blood: '',\n        sex: '',\n        height: '',\n        currentWeight: '',\n        desiredWeight: '',\n        birthday: '',\n        levelActivity: '',\n      }}\n      validationSchema={validation}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      {formik => (\n        <Stack\n          as=\"form\"\n          autoComplete=\"off\"\n          autoFocus={false}\n          onSubmit={formik.handleSubmit}\n          spacing={{ base: '40px', md: '16px' }}\n          paddingRight={{ xl: '64px' }}\n          borderRight={{ xl: '1px solid rgba(239, 237, 232, 0.2)' }}\n        >\n          <Stack spacing=\"14px\">\n            <Stack\n              spacing=\"14px\"\n              direction={{ base: 'column', md: 'row', xl: 'row' }}\n            >\n              <FormControl\n                isInvalid={formik.errors.name && formik.touched.name}\n              >\n                <FormLabel\n                  fontSize={{ base: '12px', md: '14px' }}\n                  lineHeight={{ base: '150%', md: '129%' }}\n                  mb={{ base: '4px', md: '8px' }}\n                >\n                  Name\n                </FormLabel>\n\n                <Input\n                  name=\"name\"\n                  type=\"text\"\n                  {...formik.getFieldProps('name')}\n                  placeholder={user.name}\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                  aria-label=\"name\"\n                  aria-invalid={true}\n                  w=\"100%\"\n                  h={{ base: '46px', md: '52px' }}\n                  fontSize={{ base: '14px', md: '16px' }}\n                  lineHeight={{ base: '129%', md: '150%' }}\n                />\n\n                {formik.errors.name && formik.touched.name && (\n                  <FormErrorMessage\n                    mt=\"4px\"\n                    color=\"#d80027\"\n                    fontSize=\"12px\"\n                    lineHeight=\"150%\"\n                    gap=\"4px\"\n                  >\n                    <CheckCircleIcon fontSize={14} />\n                    {formik.errors.name}\n                  </FormErrorMessage>\n                )}\n              </FormControl>\n\n              <FormControl>\n                <FormLabel\n                  fontSize={{ base: '12px', md: '14px' }}\n                  lineHeight={{ base: '150%', md: '129%' }}\n                  mb={{ base: '4px', md: '8px' }}\n                >\n                  Email\n                </FormLabel>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder={user.email}\n                  aria-label=\"email\"\n                  isReadOnly={true}\n                  w=\"100%\"\n                  h={{ base: '46px', md: '52px' }}\n                  fontSize={{ base: '14px', md: '16px' }}\n                  lineHeight={{ base: '129%', md: '150%' }}\n                />\n              </FormControl>\n            </Stack>\n            <Stack\n              direction={{ base: 'column', md: 'row', xl: 'row' }}\n              spacing={{ base: '14px', md: '14px', xl: '14px' }}\n            >\n              <HStack spacing=\"14px\">\n                <FormControl\n                  isInvalid={formik.errors.height && formik.touched.height}\n                  alignSelf=\"baseline\"\n                >\n                  <FormLabel\n                    fontSize={{ base: '12px', md: '14px' }}\n                    lineHeight={{ base: '150%', md: '129%' }}\n                    mb={{ base: '4px', md: '8px' }}\n                  >\n                    Height\n                  </FormLabel>\n\n                  <Input\n                    name=\"height\"\n                    type=\"number\"\n                    {...formik.getFieldProps('height')}\n                    placeholder={user.height}\n                    value={formik.values.height}\n                    onChange={formik.handleChange}\n                    aria-label=\"height\"\n                    h={{ base: '46px', md: '52px' }}\n                    fontSize={{ base: '14px', md: '16px' }}\n                    lineHeight={{ base: '129%', md: '150%' }}\n                  />\n\n                  {formik.errors.height && formik.touched.height && (\n                    <FormErrorMessage\n                      mt=\"4px\"\n                      color=\"#d80027\"\n                      fontSize=\"12px\"\n                      lineHeight=\"150%\"\n                      gap=\"4px\"\n                    >\n                      <CheckCircleIcon fontSize={14} />\n                      {formik.errors.height}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n\n                <FormControl\n                  isInvalid={\n                    formik.errors.currentWeight && formik.touched.currentWeight\n                  }\n                  alignSelf=\"baseline\"\n                >\n                  <FormLabel\n                    fontSize={{ base: '12px', md: '14px' }}\n                    lineHeight={{ base: '150%', md: '129%' }}\n                    mb={{ base: '4px', md: '8px' }}\n                  >\n                    Current Weight\n                  </FormLabel>\n\n                  <Input\n                    name=\"currentWeight\"\n                    type=\"number\"\n                    {...formik.getFieldProps('currentWeight')}\n                    placeholder={user.currentWeight}\n                    value={formik.values.currentWeight}\n                    onChange={formik.handleChange}\n                    aria-label=\"currentWeight\"\n                    h={{ base: '46px', md: '52px' }}\n                    fontSize={{ base: '14px', md: '16px' }}\n                    lineHeight={{ base: '129%', md: '150%' }}\n                  />\n\n                  {formik.errors.currentWeight &&\n                    formik.touched.currentWeight && (\n                      <FormErrorMessage\n                        mt=\"4px\"\n                        color=\"#d80027\"\n                        fontSize=\"12px\"\n                        lineHeight=\"150%\"\n                        gap=\"4px\"\n                      >\n                        <CheckCircleIcon fontSize={14} />\n                        {formik.errors.currentWeight}\n                      </FormErrorMessage>\n                    )}\n                </FormControl>\n              </HStack>\n              <HStack spacing=\"14px\">\n                <FormControl\n                  isInvalid={\n                    formik.errors.desiredWeight && formik.touched.desiredWeight\n                  }\n                  alignSelf=\"baseline\"\n                >\n                  <FormLabel\n                    fontSize={{ base: '12px', md: '14px' }}\n                    lineHeight={{ base: '150%', md: '129%' }}\n                    mb={{ base: '4px', md: '8px' }}\n                  >\n                    Desired Weight\n                  </FormLabel>\n\n                  <Input\n                    name=\"desiredWeight\"\n                    type=\"number\"\n                    {...formik.getFieldProps('desiredWeight')}\n                    placeholder={user.desiredWeight}\n                    value={formik.values.desiredWeight}\n                    onChange={formik.handleChange}\n                    aria-label=\"desiredWeight\"\n                    h={{ base: '46px', md: '52px' }}\n                    fontSize={{ base: '14px', md: '16px' }}\n                    lineHeight={{ base: '129%', md: '150%' }}\n                  />\n\n                  {formik.errors.desiredWeight &&\n                    formik.touched.desiredWeight && (\n                      <FormErrorMessage\n                        mt=\"4px\"\n                        color=\"#d80027\"\n                        fontSize=\"12px\"\n                        lineHeight=\"150%\"\n                        gap=\"4px\"\n                      >\n                        <CheckCircleIcon fontSize={14} />\n                        {formik.errors.desiredWeight}\n                      </FormErrorMessage>\n                    )}\n                </FormControl>\n\n                <FormControl alignSelf=\"baseline\">\n                  <FormLabel\n                    fontSize={{ base: '12px', md: '14px' }}\n                    lineHeight={{ base: '150%', md: '129%' }}\n                    mb={{ base: '4px', md: '8px' }}\n                  >\n                    Date of birth\n                  </FormLabel>\n\n                  <Input\n                    name=\"birthday\"\n                    type=\"date\"\n                    {...formik.getFieldProps('birthday')}\n                    placeholder={user.birthday}\n                    value={formik.values.birthday}\n                    onChange={formik.handleChange}\n                    aria-label=\"birthday\"\n                    h={{ base: '46px', md: '52px' }}\n                    fontSize={{ base: '14px', md: '16px' }}\n                    lineHeight={{ base: '129%', md: '150%' }}\n                  />\n                </FormControl>\n              </HStack>\n            </Stack>\n          </Stack>\n          <Stack spacing={{ base: '40px', md: '32px' }}>\n            <Stack spacing=\"0\">\n              <Text\n                fontSize={{ base: '12px', md: '14px' }}\n                lineHeight={{ base: '150%', md: '129%' }}\n                mb={{ base: '4px', md: '8px' }}\n              >\n                Blood\n              </Text>\n              <HStack justify=\"space-between\">\n                <RadioGroup\n                  defaultValue={user.blood}\n                  size={{ base: 'base', md: 'md' }}\n                  variant=\"groove\"\n                >\n                  <VStack>\n                    <HStack spacing=\"8px\">\n                      <FormLabel>\n                        <Radio type=\"radio\" name=\"blood\" value=\"1\" />1\n                      </FormLabel>\n                      <FormLabel>\n                        <Radio type=\"radio\" name=\"blood\" value=\"2\" />2\n                      </FormLabel>\n                      <FormLabel>\n                        <Radio type=\"radio\" name=\"blood\" value=\"3\" />3\n                      </FormLabel>\n                      <FormLabel>\n                        <Radio type=\"radio\" name=\"blood\" value=\"4\" />4\n                      </FormLabel>\n                    </HStack>\n                  </VStack>\n                </RadioGroup>\n                <RadioGroup\n                  defaultValue={user.sex}\n                  size={{ base: 'base', md: 'md' }}\n                  variant=\"groove\"\n                >\n                  <HStack spacing=\"8px\">\n                    <FormLabel>\n                      <Radio type=\"radio\" name=\"sex\" value=\"male\" />\n                      Male\n                    </FormLabel>\n                    <FormLabel>\n                      <Radio type=\"radio\" name=\"sex\" value=\"female\" />\n                      Female\n                    </FormLabel>\n                  </HStack>\n                </RadioGroup>\n              </HStack>\n            </Stack>\n\n            <RadioGroup\n              defaultValue={user.levelActivity}\n              size={{ base: 'base', md: 'md' }}\n              variant=\"groove\"\n            >\n              <VStack spacing=\"8px\" align=\"flex-start\">\n                <FormLabel>\n                  <Radio type=\"radio\" name=\"levelActivity\" value=\"1\" />\n                  Sedentary lifestyle (little or no physical activity)\n                </FormLabel>\n                <FormLabel>\n                  <Radio type=\"radio\" name=\"levelActivity\" value=\"2\" />\n                  Light activity (light exercises/sports 1-3 days per week)\n                </FormLabel>\n                <FormLabel>\n                  <Radio type=\"radio\" name=\"levelActivity\" value=\"3\" />\n                  Moderately active (moderate exercises/sports 3-5 days per\n                  week)\n                </FormLabel>\n                <FormLabel>\n                  <Radio type=\"radio\" name=\"levelActivity\" value=\"4\" />\n                  Very active (intense exercises/sports 6-7 days per week)\n                </FormLabel>\n                <FormLabel>\n                  <Radio type=\"radio\" name=\"levelActivity\" value=\"5\" />\n                  Extremely active (very strenuous exercises/sports and physical\n                  work)\n                </FormLabel>\n              </VStack>\n            </RadioGroup>\n          </Stack>\n          <Button\n            type=\"submit\"\n            w={{ base: '115px', md: '144px' }}\n            mt={{ base: '40px', md: '38px', xl: '48px' }}\n            size={{ base: 'base', md: 'md' }}\n            variant=\"solid\"\n            disabled\n          >\n            Save\n          </Button>\n        </Stack>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { ChakraProvider, Container, Stack, VStack } from '@chakra-ui/react';\nimport { theme } from './mods/Theme';\nimport { Title } from 'components/Title/Title';\nimport { UserCard } from './UserCard';\nimport { UserForm } from './UserForm';\n//---------------------------------------\n\nexport const ProfilePage = () => {\n  return (\n    <ChakraProvider theme={theme} resetCSS>\n      <Container px={{ base: '20px', md: '32px', xl: '96px' }} centerContent>\n        <VStack spacing={10} w=\"100%\">\n          <Title />\n          <Stack\n            w={{ xl: '100%' }}\n            direction={{ base: 'column', md: 'column', xl: 'row-reverse' }}\n            gap={{ base: '18px', md: '38px', xl: '54px' }}\n          >\n            <UserCard />\n            <UserForm />\n          </Stack>\n        </VStack>\n      </Container>\n    </ChakraProvider>\n  );\n};\n","import React from 'react';\nimport { ProfilePage } from '../components/UserPage/ProfilePage';\n\nfunction UserPage() {\n  return (\n    <div>\n      <ProfilePage />\n    </div>\n  );\n}\n\nexport default UserPage;\n"],"names":["Icon","_ref","width","height","iconid","_jsx","children","href","concat","sprite","TitleText","styled","_templateObject","_taggedTemplateLiteral","Title","title","baseStyle","defineStyle","w","h","mx","minW","maxW","px","py","containerStyle","defineStyleConfig","container","border","bg","avatarStyles","fontFamily","fontWeight","color","textStyles","bgColor","textAlign","textTransform","badgeStyles","p","borderRadius","header","fontSize","footer","base","md","cardStyles","variants","display","transitionProperty","transitionDuration","opacity","_disabled","formLabelStyles","_createMultiStyleConf","createMultiStyleConfigHelpers","parts","definePartsStyle","inputStyles","defineMultiStyleConfig","field","minWidth","outline","position","appearance","_placeholder","cursor","props","boxShadow","_hover","borderColor","_invalid","_valid","_focus","_focusVisible","defaultProps","variant","solid","sizes","lineHeight","buttonStyles","theme","extendTheme","styles","global","m","colors","brand","black","orange","orange1","beige","white","breakpoints","sm","lg","xl","components","Container","Avatar","Text","Badge","Card","FormLabel","Input","Button","AvatarIcon","AddAvatarIcon","_templateObject2","FoodIcon","_templateObject3","DumbBellIcon","_templateObject4","ExclamationMarkIcon","_templateObject5","LogOut","_templateObject6","UserCard","dispatch","useDispatch","_useAuth","useAuth","user","bmr","dailyRateSports","useEffect","fetchUserCurrent","Stack","_jsxs","VStack","spacing","icon","pos","type","onClick","fetchUserAvatars","right","bottom","mb","name","HStack","direction","justify","align","CardHeader","CardFooter","boxSize","fetchUserLogout","rightIcon","alignContent","alignSelf","iconSpacing","Radio","Field","validation","object","string","min","max","number","integer","required","currentWeight","desiredWeight","birthday","date","nullable","default","Date","UserForm","Formik","initialValues","blood","sex","levelActivity","validationSchema","onSubmit","values","actions","fetchUserParams","Number","handleSubmit","resetForm","formik","as","autoComplete","autoFocus","paddingRight","borderRight","FormControl","isInvalid","errors","touched","_objectSpread","getFieldProps","placeholder","value","onChange","handleChange","FormErrorMessage","mt","gap","CheckCircleIcon","email","isReadOnly","RadioGroup","defaultValue","size","disabled","ProfilePage","ChakraProvider","resetCSS","centerContent"],"sourceRoot":""}