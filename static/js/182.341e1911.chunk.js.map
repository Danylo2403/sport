{"version":3,"file":"static/js/182.341e1911.chunk.js","mappings":"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","sources":["components/AuthLayout/AuthLayout.styled.jsx","img/sprite.svg","components/AuthLayout/AuthLayout.jsx","components/AuthLayout/StyledForm.styled.jsx","pages/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// import Desk1x from '../../img/hero-1x.jpg';\n// import Desk2x from '../../img/hero-2x.jpg';\n// import Tab1x from '../../img/hero-tablet-1x.jpg';\n// import Tab2x from '../../img/hero-tablet-2x.jpg';\n// import Mob1x from '../../img/hero-mobile-1x.jpg';\n// import Mob2x from '../../img/hero-mobile-2x.jpg';\n\nexport const Container = styled.div`\n  padding-top: 66px;\n  padding-bottom: 0px;\n  font-family: 'Roboto', sans-serif;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 105px;\n  }\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: row;\n    gap: 178px;\n    padding-right: 32px;\n    padding-top: 116px;\n  }\n`;\n\nexport const ContainerForm = styled.div`\n  width: 100%;\n  max-width: 335px;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    max-width: 496px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.17;\n  color: #efede8;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 1.38;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'Roboto', sans-serif;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.28;\n\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TextLinkIn = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 12px;\n  line-height: 1.5;\n  padding-top: 12px;\n\n  color: rgba(239, 237, 232, 0.6);\n\n  @media screen and (min-width: 768px) {\n    margin-left: 15px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-family: 'Roboto', sans-serif;\n  font-size: 12px;\n  line-height: 1.5;\n  text-decoration: underline;\n  display: inline-block;\n  color: #ffff;\n`;\n\nexport const IconPlay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 146px;\n  height: 66px;\n  background-color: #303030;\n  border-radius: 12px;\n  position: absolute;\n  top: 499px;\n  left: 121px;\n\n  @media screen and (min-width: 768px) {\n    top: 630px;\n    left: 331px;\n    width: 206px;\n    height: 96px;\n    padding: 20px 23px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 300px;\n    left: 770px;\n  }\n`;\n\nexport const SvgPlay = styled.svg`\n  width: 12px;\n  height: 12px;\n  color: #efede8;\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Tutorial = styled.h3`\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.12;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const TextTutorial = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.33;\n  letter-spacing: 0px;\n  text-align: left;\n  padding-top: 4px;\n\n  color: rgba(239, 237, 232, 0.65);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    padding-top: 8px;\n  }\n`;\n\nexport const Calories = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 119px;\n  height: 76px;\n  border-radius: 12px;\n  background-color: #ef8964;\n  padding: 14px 18px;\n  position: absolute;\n  top: 635px;\n  left: 236px;\n\n  @media screen and (min-width: 768px) {\n    width: 180px;\n    height: 110px;\n    top: 782px;\n    left: 556px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 435px;\n    left: 1228px;\n  }\n`;\n\nexport const IconMan = styled.div`\n  background-color: #efa082;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\nexport const IconManSvg = styled.svg`\n  width: 12px;\n  height: 12px;\n  @media screen and (min-width: 768px) {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const SectionMan = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  @media screen and (min-width: 768px) {\n    justify-content: normal;\n    gap: 11px;\n  }\n`;\nexport const TitleMan = styled.p`\n  color: #efede8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: -1px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n    line-height: 1.04;\n  }\n`;\n\nexport const SpanMan = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.3;\n  color: rgba(239, 237, 232, 0.65);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const Icon = styled.div`\n  fill: #efede8;\n  background-color: #ef8964;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  margin-right: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n    margin-right: 12px;\n  }\n`;\nexport const Block = styled.div``;\n","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Icon-1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M23.778 14.444v-4.667c0-4.296-3.482-7.778-7.778-7.778s-7.778 3.482-7.778 7.778v4.667M9.467 30h13.067c2.614 0 3.92 0 4.919-0.509 0.878-0.447 1.592-1.161 2.039-2.039 0.509-0.998 0.509-2.305 0.509-4.919v-0.622c0-2.614 0-3.92-0.509-4.919-0.447-0.878-1.161-1.592-2.039-2.039-0.998-0.509-2.305-0.509-4.919-0.509h-13.067c-2.614 0-3.92 0-4.919 0.509-0.878 0.447-1.592 1.161-2.039 2.039-0.509 0.998-0.509 2.305-0.509 4.919v0.622c0 2.614 0 3.92 0.509 4.919 0.447 0.878 1.161 1.592 2.039 2.039 0.998 0.509 2.305 0.509 4.919 0.509z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-keyboard\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34 4h-32c-1.1 0-2 0.9-2 2v20c0 1.1 0.9 2 2 2h32c1.1 0 2-0.9 2-2v-20c0-1.1-0.9-2-2-2zM20 8h4v4h-4v-4zM26 14v4h-4v-4h4zM14 8h4v4h-4v-4zM20 14v4h-4v-4h4zM8 8h4v4h-4v-4zM14 14v4h-4v-4h4zM4 8h2v4h-2v-4zM4 14h4v4h-4v-4zM6 24h-2v-4h2v4zM24 24h-16v-4h16v4zM32 24h-6v-4h6v4zM32 18h-4v-4h4v4zM32 12h-6v-4h6v4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.6e8294214bea0b7178db077054d20903.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  Container,\n  ContainerForm,\n  Title,\n  Text,\n  TextLinkIn,\n  StyledLink,\n  IconPlay,\n  SvgPlay,\n  Tutorial,\n  TextTutorial,\n  Calories,\n  IconMan,\n  SectionMan,\n  TitleMan,\n  SpanMan,\n  Icon,\n  Block,\n  IconManSvg,\n} from './AuthLayout.styled';\nimport sprite from '../../img/sprite.svg';\n\nconst AuthLayout = ({\n  title,\n  paragraph,\n  bottomText,\n  linkName,\n  linkUrl,\n  children,\n}) => {\n  return (\n    <Container className=\"container\">\n      <ContainerForm>\n        <Title>{title}</Title>\n        <Text>{paragraph}</Text>\n\n        {children}\n\n        <TextLinkIn>\n          {bottomText} <StyledLink to={linkUrl}>{linkName}</StyledLink>\n        </TextLinkIn>\n      </ContainerForm>\n\n      <IconPlay>\n        <Icon>\n          <SvgPlay>\n            <use href={`${sprite}#icon-Polygon-1`}></use>\n          </SvgPlay>\n        </Icon>\n\n        <Block>\n          <Tutorial>\n            350+<TextTutorial>Video tutorial</TextTutorial>\n          </Tutorial>\n        </Block>\n      </IconPlay>\n      <Calories>\n        <IconMan>\n          <IconManSvg>\n            <use href={`${sprite}#icon-Group`}></use>\n          </IconManSvg>\n        </IconMan>\n        <SectionMan>\n          <TitleMan>500</TitleMan>\n          <SpanMan>cal</SpanMan>\n        </SectionMan>\n      </Calories>\n    </Container>\n  );\n};\n\nexport default AuthLayout;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  // gap:18px;\n\n  @media screen and (min-width: 768px) {\n    width: 364px;\n    // gap: 20px;\n  }\n`;\n\nexport const Test = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  justify-content: center;\n`;\n\nexport const StyledFormIn = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  justify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  padding: 0;\n  margin: 0;\n  background-color: inherit;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: #efede8;\n  width: 100%;\n  height: 46px;\n  border-radius: 12px;\n  padding-left: 14px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.28;\n\n    color: rgba(239, 237, 232, 0.6);\n  }\n\n  &:hover {\n    border: 1px solid #e6533c;\n  }\n  &:focus {\n    border: 1px solid #e6533c;\n  }\n  &.default {\n    outline: 1px solid rgba(239, 237, 232, 0.6);\n  }\n  &.error {\n    border: 1px solid #d80027;\n  }\n  &.success {\n    border: 1px solid #3cbf61;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: 'Roboto', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #e6533c;\n  width: 136px;\n  height: 42px;\n  border-radius: 12px;\n  border: none;\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 28px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ef8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 190px;\n    height: 56px;\n    margin-top: 64px;\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\nexport const Message = styled.div`\n  position: absolute;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0.01em;\n  text-align: left;\n  color: var(--error-color);\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { fetchUserLogIn } from '../redux/user/operations';\n\nimport {\n  StyledFormIn,\n  Input,\n  Button,\n  Message,\n  ErrorText,\n} from '../components/AuthLayout/StyledForm.styled';\n\nimport AuthLayout from 'components/AuthLayout/AuthLayout';\n\nfunction SignInPage() {\n  const [showPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const SignIn = Yup.object().shape({\n    email: Yup.string()\n      .min(3, 'The email address must be at least 3 characters long!')\n      .max(20, 'The email address is too long!')\n      .email('Error email')\n      .required('Required'),\n    password: Yup.string().required('Required').min(6).max(20),\n  });\n\n  return (\n    <AuthLayout\n      title=\"Sign in\"\n      paragraph=\"Some text about Welcome! Please enter your credentials to login to the platform:\"\n      bottomText=\"Don’t have an account?\"\n      linkName=\"Sign up\"\n      linkUrl=\"/register\"\n    >\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validation={SignIn}\n        onSubmit={values => {\n          dispatch(fetchUserLogIn(values));\n        }}\n      >\n        {({ errors, touched }) => (\n          <StyledFormIn>\n            <label htmlFor=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                type=\"email\"\n                className={`${'defoult'}\n                    ${touched.email && !errors.email && 'success'}\n                    ${touched.email && errors.email && 'error'}`}\n              />\n            </label>\n            <label htmlFor=\"password\">\n              <Input\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                className={`${'defoult'}\n                    ${touched.password && !errors.password && 'success'}\n                    ${touched.password && errors.password && 'error'}`}\n              />\n              {errors.password && touched.password && (\n                <Message>\n                  <ErrorText>\n                    <ErrorMessage component=\"p\" name=\"password\" />\n                  </ErrorText>\n                </Message>\n              )}\n              {!errors.password && touched.password && (\n                <Message>\n                  <ErrorText>Success password</ErrorText>\n                </Message>\n              )}\n            </label>\n            <Button type=\"submit\">Sign In</Button>\n          </StyledFormIn>\n        )}\n      </Formik>\n    </AuthLayout>\n  );\n}\n\nexport default SignInPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ContainerForm","_templateObject2","Title","_templateObject3","Text","_templateObject4","TextLinkIn","_templateObject5","StyledLink","Link","_templateObject6","IconPlay","_templateObject7","SvgPlay","_templateObject8","Tutorial","_templateObject9","TextTutorial","_templateObject10","Calories","_templateObject11","IconMan","_templateObject12","IconManSvg","_templateObject13","SectionMan","_templateObject14","TitleMan","_templateObject15","SpanMan","_templateObject16","Icon","_templateObject17","Block","_templateObject18","_ref","title","paragraph","bottomText","linkName","linkUrl","children","_jsxs","className","_jsx","to","href","concat","sprite","StyledForm","Form","Test","StyledFormIn","Input","Field","Button","Message","ErrorText","_useState","useState","showPassword","_slicedToArray","dispatch","useDispatch","SignIn","Yup","shape","email","min","max","required","password","AuthLayout","Formik","initialValues","validation","onSubmit","values","fetchUserLogIn","errors","touched","htmlFor","id","name","placeholder","type","ErrorMessage","component"],"sourceRoot":""}