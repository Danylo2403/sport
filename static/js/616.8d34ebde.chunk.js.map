{"version":3,"file":"static/js/616.8d34ebde.chunk.js","mappings":"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","sources":["components/AddExerciseSuccess/customStylesModal.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/products/NotFoundProduct/NotFoundProduct.styled.js","components/products/NotFoundProduct/NotFoundProduct.jsx","components/products/ProductsFilters/ProductsFilters.styled.js","components/products/ProductsFilters/ProductsFilters.jsx","components/products/ProductsList/ProductsList.styled.js","components/AddProductForm/AddProductForm.styled.js","components/AddProductForm/AddProductForm.jsx","components/AddProductSuccess/AddProductSuccess.styled.js","components/AddProductSuccess/AddProductSuccess.jsx","components/products/ProductsList/ProductsItem.jsx","components/products/ProductsList/ProductsList.jsx","redux/products/productsSelectors.js","pages/ProductsPage.jsx"],"sourcesContent":["import Modal from 'react-modal'\nconst BasicModalWindow = Modal;\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    borderRadius: '12px',\n    borderColor: 'rgba(239, 237, 232, 0.2)',\n    backgroundColor: 'rgba(16, 16, 15, 1)',\n    padding: 0,\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.707)',\n    zIndex: 1001,\n  },\n};\n\nexport {BasicModalWindow  ,customStyles}","import styled from 'styled-components';\n\nexport const TitleText = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n  font-size: 32px;\n  line-height: 44px;\n`;\n","import React from 'react';\nimport { TitleText } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleText>{title}</TitleText>;\n};\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin-top: 64px;\n  max-width: 335px;\n  @media screen and (min-width: 768px) {\n    margin-top: 132px;\n    max-width: 580px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 136px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  line-height: 129%;\n  color: var(--text-info-color);\n`;\n\nconst AccentText = styled.span`\n  color: var(--orange-color);\n`;\n\nexport { Wrapper, Text, AccentText };\n","import React from 'react';\nimport { Wrapper, Text, AccentText } from './NotFoundProduct.styled';\n\nexport const NotFoundProduct = () => {\n  return (\n    <Wrapper>\n      <Text>\n        <AccentText>Sorry, no results were found </AccentText>for the product filters you\n        selected. You may want to consider other search options to find the\n        product you want. Our range is wide and you have the opportunity to find\n        more options that suit your needs.\n        <br />\n        <br />\n      <AccentText>Try changing the search parameters.</AccentText>\n      </Text>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport BgImg1x from '../../../img/products-1x.jpg';\nimport BgImg2x from '../../../img/products-2x.jpg';\n\nconst PageContainer = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    background-image: url(${BgImg1x});\n    background-repeat: no-repeat;\n    background-position: right;\n    background-size: contain;\n    height: 716px;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${BgImg2x});\n    }\n  }\n`;\n\nconst Container = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  max-width: 375px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    max-width: 664px;\n    margin: 32px 0px;\n    justify-content: flex-start;\n    font-size: 16px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 335px;\n  @media screen and (min-width: 768px) {\n    width: 236px;\n  }\n`;\n\nconst Input = styled.input`\n  font-size: 14px;\n  border: none;\n  outline: none;\n  background-color: inherit;\n  color: var(--white-color);\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst InputButton = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 1px;\n  background-color: inherit;\n  border: none;\n`;\n\nconst SelectLevel = styled.select`\n  font-size: 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 173px;\n  background-color: inherit;\n  color: var(--white-color);\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml,%3Csvg%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%3Cpath%20d%3D%22M4.5%206.75L9%2011.25L13.5%206.75%22%20stroke%3D%22%23EFEDE8%22%20stroke-width%3D%222%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20%2F%3E%0A%3C%2Fsvg%3E');\n  background-repeat: no-repeat;\n  background-position: right 14px center;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    width: 204px;\n  }\n`;\n\nconst Option = styled.option`\n  background: #1c1c1c;\n  border: none;\n  outline: none;\n  border-radius: 12px;\n  padding: 14px 32px 14px 14px;\n  margin-bottom: 8px;\n  max-height: 228px;\n`;\n\nexport {\n  PageContainer,\n  Container,\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n  SelectLevel,\n  Option,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\n\nimport {\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n} from './ProductsFilters.styled';\nimport {\n  setFilterQuery,\n  setFilterCategory,\n  setFilterRecommended,\n} from '../../../redux/products/productsSlice';\nimport { Icon } from 'components/Icon/Icon';\n\nexport const ProductsFilters = ({ categories }) => {\n  const recommendedFilters = ['all', 'recommended', 'not recommended'];\n\n  const customStyles = {\n    control: (base, state) => ({\n      ...base,\n      backgroundColor: 'inherit',\n      borderRadius: '12px',\n      border: '1px solid var(--text-info-color)',\n      width: '100%',\n      padding: '6px',\n      fontSize: '14px',\n      height: '50px',\n      '@media screen and (min-width: 768px)': {\n        fontSize: '16px',\n        width: '192px',\n      },\n    }),\n    menu: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n    menuList: base => ({\n      ...base,\n      backgroundColor: '#1c1c1c',\n      borderRadius: '12px',\n      padding: '14px 32px 14px 14px',\n      gap: '8px',\n      maxHeight: '228px',\n      overflowY: 'auto',\n      '&::-webkit-scrollbar': {\n        width: '6px',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        backgroundColor: 'rgba(239, 237, 232, 0.1)',\n        borderRadius: '12px',\n      },\n      color: 'var(--white-color)',\n    }),\n    indicatorSeparator: base => ({\n      ...base,\n      display: 'none',\n    }),\n    placeholder: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n    singleValue: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n  };\n\n  const capitalizeFirstLetter = text => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n    dispatch(setFilterQuery(''));\n  };\n  const dispatch = useDispatch();\n  const [hiddenBtn, setHiddenBtn] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setHiddenBtn(value.length > 0);\n    setQuery(value);\n    dispatch(setFilterQuery(value));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery('');\n    setHiddenBtn(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <ButtonWrapper>\n          {hiddenBtn && (\n            <InputButton type=\"button\" onClick={clearQuery}>\n              <Icon iconid={'x-red'} width={18} height={18} />\n            </InputButton>\n          )}\n          <InputButton type=\"submit\">\n            <Icon iconid={'search'} width={18} height={18} />\n          </InputButton>\n        </ButtonWrapper>\n      </InputWrapper>\n      <Select\n        onChange={evt => dispatch(setFilterCategory(evt.value))}\n        options={categories.map(category => ({\n          value: category,\n          label: capitalizeFirstLetter(category),\n        }))}\n        name=\"Categories\"\n        placeholder=\"Categories\"\n        styles={customStyles}\n        minWidth=\"146px\"\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n        })}\n      />\n      <Select\n        onChange={evt => dispatch(setFilterRecommended(evt.value))}\n        placeholder=\"All\"\n        styles={customStyles}\n        minWidth=\"173px\"\n        maxWidth=\"204px\"\n        options={recommendedFilters.map(el => ({\n          value: el,\n          label: capitalizeFirstLetter(el),\n        }))}\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n        })}\n        name=\"recommended\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px 16px;\n    max-width: calc(335px * 2 + 16px + 12px + 32px + 8px);\n    max-height: 660px;\n    overflow-y: scroll;\n    scrollbar-color: var(--orange_1-color);\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: var(--orange_1-color);\n      border-radius: 12px;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: rgba(239, 237, 232, 0.1);\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    max-height: 487px;\n    max-width: calc(405px * 2 + 16px * 2 + 8px);\n  }\n`;\n\nconst ListItem = styled.li``;\n\nconst Container = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  padding: 16px;\n  width: 335px;\n\n  background-color: rgba(239, 237, 232, 0.05);\n  @media screen and (min-width: 1440px) {\n    min-width: 405px;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 35px;\n`;\n\nconst DietContainer = styled.div`\n  border-radius: 4px;\n  padding: 5px 7px;\n  width: 41px;\n  height: 24px;\n  background-color: rgba(239, 237, 232, 0.05);\n`;\n\nconst DietText = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  color: #fff;\n`;\n\nconst RightSideWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst RecommendedContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst RecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst NotRecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst GreenRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #419b09;\n`;\n\nconst RedRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #e9101d;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  color: var(--white-color);\n  max-width: 122px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: 49px;\n  height: 18px;\n  padding: 0px;\n  background-color: inherit;\n  border: none;\n  font-size: 14px;\n  color: var(--orange-color);\n`;\n\nconst MainContainer = styled.div``;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nconst TitleText = styled.p`\n  font-size: 20px;\n  color: var(--white-color);\n  margin-left: 16px;\n  max-width: 258px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst DarkText = styled.span`\n  color: rgba(239, 237, 232, 0.4);\n`;\n\nexport {\n  List,\n  ListItem,\n  Container,\n  GreenRound,\n  RedRound,\n  DietContainer,\n  MainContainer,\n  Text,\n  TitleText,\n  TitleWrapper,\n  DarkText,\n  DietText,\n  InfoWrapper,\n  HeaderWrapper,\n  RightSideWrapper,\n  RecommendedWrapper,\n  NotRecommendedWrapper,\n  RecommendedContainer,\n  Button,\n};\n","import styled from 'styled-components';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    borderRadius: '12px',\n    borderColor: 'rgba(239, 237, 232, 0.2)',\n    backgroundColor: 'rgba(16, 16, 15, 1)',\n    padding: 0,\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.707)',\n    zIndex: 1001,\n  },\n};\n\nconst ModalForm = styled.form`\n  padding: 48px 24px;\n  box-sizing: border-box;\n  color: #EFEDE8;\n  max-width: 100%;\n\n  height: auto;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    padding: 48px 32px;\n  }\n`;\n\nconst WrapperCloseIcon = styled.div`\nposition: fixed;\ntop: 18px;\nright: 18px;\ncursor: pointer;\n\n`\n\nconst WrapperInputForm = styled.div`\nwidth: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    display: flex;\n    gap: 16px;\n  }\n`\n\nconst ProductInput = styled.input`\n  width: 100%;\n  height: 34px;\n  border-radius: 12px;\n  border: 1px solid;\n  border-color: rgba(230, 83, 60, 1);\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(239, 237, 232, 0.3);\n  padding: 8px 14px 8px 14px;\n  margin-bottom: 16px;\n  background-color: transparent;\n  outline: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    width: 244px;\n    font-size: 16px;\n    line-height: 1.5;\n    height: 40px;\n  }\n`;\n\nconst GrammInput = styled.input`\n  width: 287px;\n  height: 34px;\n  border-radius: 12px;\n  border: 1px solid;\n  border-color: rgba(230, 83, 60, 1);\n  color: #EFEDE8 ;\n  font-size: 14px;\n  line-height: 1.28;\n  padding: 8px 60px 8px 14px;\n  margin-bottom: 16px;\n  background-color: transparent;\n  outline: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    width: 155px;\n    font-size: 16px;\n    line-height: 1.5;\n    height: 40px;\n  }\n`;\n\n\nconst Span = styled.span`\n  font-size: 12px;\n  line-height : 1.5;\n  color: rgba(239, 237, 232, 0.4);\n  position: fixed;\n  right: 42px;\n  top: 115px;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    top: 68px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  line-height: 1.5;\n  color: rgba(239, 237, 232, 0.3);\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    margin-bottom: 64px;\n  }\n\n`;\n\nconst AddToDiaryButton = styled.button`\n  width: 151px;\n  height: 42px;\n  font-size: 16px;\n  line-height: 1.12;\n  border-radius: 12px;\n  background-color: rgba(230, 83, 60, 1);\n  padding: 12px 32px;\n  color: #EFEDE8;\n  border: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    line-height: 1.5;\n    padding: 14px 32px;\n    height: 52px;\n  }\n`;\n\nconst CancelButton = styled.button`\nmargin: 0;\n  width: 121px;\n  height: 42px;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  margin-left: 14px;\n  padding: 12px 36px;\n  font-size: 16px;\n  line-height: 1.12;\n  color: #EFEDE8;\n  background-color: transparent;\n\n  \n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n  width: 142px;\n  height: 52px;\nfont-size: 20px;\nline-height: 1.2;\npadding: 14px 40px;\nmargin-left: 16px;\n  }\n`;\n\nexport {\n  AddToDiaryButton,\n  CancelButton,\n  customStyles,\n  ModalForm,\n  ProductInput,\n  GrammInput,\n  Text,\n  Span,\n  WrapperCloseIcon,\n  WrapperInputForm\n};\n","\nimport React, { useState } from 'react';\nimport { CloseIcon } from '@chakra-ui/icons';\n\nimport {\n  CancelButton,\n  AddToDiaryButton,\n  ModalForm,\n  ProductInput,\n  GrammInput,\n  Text,\n  Span,\n  WrapperCloseIcon,\n  WrapperInputForm\n} from './AddProductForm.styled';\n\nexport const AddProductForm = ({ product, onClose, onCloseForm, onSuccess, onError }) => {\n  const [grams, setGrams] = useState('');\n  const [calories, setCalories] = useState(0);\n\n  const { title, calories: productCalories } = product;\n\n  const handleGramsChange = e => {\n    const gramsValue = e.target.value;\n\n    setGrams(gramsValue.trim());\n    if (!isNaN(gramsValue)) {\n      const calculatedCalories = (gramsValue * productCalories) / 100;\n      setCalories(calculatedCalories);\n    } else {\n      setCalories(0);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n        onCloseForm()\n        onSuccess(calories);\n\n  };\n\n  return (\n    <>\n      <WrapperCloseIcon onClick={onClose}>\n        <CloseIcon w={11} h={11} />\n      </WrapperCloseIcon>\n      <ModalForm onSubmit={handleSubmit}>\n        <WrapperInputForm>\n          <ProductInput type=\"text\" value={title} readOnly />\n          <div>\n            <GrammInput\n              type=\"number\"\n              inputMode=\"numeric\"\n              value={grams}\n              onChange={handleGramsChange}\n            />\n            <Span>grams</Span>\n          </div>\n        </WrapperInputForm>\n\n        <Text>\n          Calories:\n          <span style={{ color: 'white', marginLeft: '4px' }}>{calories}</span>\n        </Text>\n          <AddToDiaryButton type=\"submit\">\n            Add to diary\n          </AddToDiaryButton>\n          <CancelButton type=\"button\" onClick={onClose}>\n            Cancel\n          </CancelButton>\n      </ModalForm>\n    </>\n  );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Wrapper = styled.div`\n  padding: 48px 89px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\npadding: 64px 136px 64px 137px;\n  }\n`;\n\nconst WrapperCloseIcon  = styled.div`\nposition: fixed;\ntop: 18px;\nright: 18px;\ncursor: pointer;\n`\n\nconst ImageEl = styled.img`\n  margin-bottom: 16px;\n  width: 123px;\n  height: 84px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nmargin-bottom: 32px;\n  }\n`;\nconst Heading = styled.h3`\n  font-size: 24px;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nconst Calories = styled.p`\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(239, 237, 232, 0.3);\n  margin-bottom: 24px;\n\n  span {\n    color: rgba(230, 83, 60, 1);\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nmargin-bottom: 32px;\n  }\n`;\n\nconst ProductButton = styled.button`\n  display: block;\n  border: none;\n  width: 157px;\n  height: 42px;\n\n  color: #EFEDE8;\n  font-size: 16px;\n  line-height: 1.12;\n  border-radius: 12px;\n  background-color: rgba(230, 83, 60, 1);\n  padding: 12px 32px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nwidth: 157px;\nheight: 52px;\n  }\n`;\n\nconst WrapperDiaryLink = styled(Link)`\ndisplay: flex;\nalign-items : center ;\ntext-decoration: none;\ncursor: pointer;\n`\n\nconst DiaryLink = styled.div`\n  color: rgba(239, 237, 232, 0.3);\n  text-decoration: none;\n  /* margin-right: 8px; */\n  font-size: 14px;\n  line-height: 1.28;\n`;\n\n\nexport { Wrapper, DiaryLink, ImageEl, Heading, Calories, ProductButton , WrapperCloseIcon , WrapperDiaryLink };\n","import img from '../../img/avocado-1x.png';\nimport { CloseIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport {\n  Wrapper,\n  ImageEl,\n  DiaryLink,\n  Heading,\n  Calories,\n  ProductButton,\n  WrapperCloseIcon,\n  WrapperDiaryLink,\n} from './AddProductSuccess.styled';\n\nexport const AddProductSuccess = ({\n  isSuccessOpen,\n  onClose,\n  caloriesAdded,\n  onCloseSuccess\n}) => {\n  return (\n    <>\n        <WrapperCloseIcon onClick={onClose}>\n          <CloseIcon w={11} h={11} />\n        </WrapperCloseIcon>\n        <Wrapper>\n          <ImageEl src={img} alt=\"Success\" />\n          <Heading>Well done</Heading>\n\n          <Calories>\n            Calories:<span> {caloriesAdded}</span>\n          </Calories>\n          <ProductButton onClick={onClose}>Next product</ProductButton>\n          <WrapperDiaryLink to=\"/diary\">\n            <DiaryLink>To the diary </DiaryLink>\n            <div>\n              <ArrowForwardIcon boxSize={24} color=\"rgba(239, 237, 232, 0.3)\" />\n            </div>\n          </WrapperDiaryLink>\n        </Wrapper>\n    </>\n  );\n};\n","import {\n    ListItem,\n    Container,\n    GreenRound,\n    DietContainer,\n    MainContainer,\n    RecommendedContainer,\n    Text,\n    TitleText,\n    TitleWrapper,\n    DarkText,\n    DietText,\n    InfoWrapper,\n    HeaderWrapper,\n    RightSideWrapper,\n    RecommendedWrapper,\n    Button,\n  } from './ProductsList.styled';\n\n  import {\n  customStyles,\n  BasicModalWindow,\n} from '../../AddExerciseSuccess/customStylesModal';\n\nimport { AddProductForm } from '../../AddProductForm/AddProductForm';\nimport { AddProductSuccess } from '../../AddProductSuccess/AddProductSuccess';\nimport { useState } from 'react';\nimport { Icon } from '../../Icon/Icon';\n\nBasicModalWindow.setAppElement('#root');\n  \n  export const ProductItem = ({ product }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [caloriesAdded, setCaloriesAdded] = useState(0);\n    // const [error, setError] = useState(null);\n    const [isFormVisible, setIsFormVisible] = useState(true);\n\n    const handleOpenModal = () => {\n      setIsOpen(true);\n    };\n\n    const handleCloseModal = () => {\n      setIsOpen(false);\n    };\n\n    const handleCloseSuccess = () => {\n      setIsFormVisible(!isFormVisible);\n      setIsOpen(false);\n    };\n\n    const handleCloseForm = () => {\n      setIsFormVisible(!isFormVisible);\n    };\n\n    const handleAddProductSuccess = calories => {\n      // POST на бек\n      setCaloriesAdded(calories);\n    };\n\n    const handleAddProductError = errorMessage => {\n      // setError(errorMessage);\n    };\n\n    const capitalizeFirstLetter = text => {\n      return text.charAt(0).toUpperCase() + text.slice(1);\n    };\n\n    return (\n      <ListItem>\n        <Container>\n          <HeaderWrapper>\n            <DietContainer>\n              <DietText>DIET</DietText>\n            </DietContainer>\n            <RightSideWrapper>\n              <RecommendedContainer>\n                <RecommendedWrapper>\n                  <GreenRound></GreenRound>\n                  <Text>Recommended</Text>\n                </RecommendedWrapper>\n              </RecommendedContainer>\n              <Button type=\"button\" onClick={handleOpenModal}>\n                Add\n                <div style={{ paddingTop: '4px', marginLeft: '8px' }}>\n                  <Icon iconid={'arrow'} width={16} height={16} />\n                </div>\n              </Button>\n            </RightSideWrapper>\n          </HeaderWrapper>\n          <MainContainer>\n            <TitleWrapper>\n              <Icon iconid={'circle-running-man'} width={24} height={24} />\n              <TitleText>{capitalizeFirstLetter(product.title)}</TitleText>\n            </TitleWrapper>\n            <InfoWrapper>\n              <Text>\n                <DarkText>Calories: </DarkText>\n                {product.calories}\n              </Text>\n              <Text>\n                <DarkText>Category: </DarkText>\n                {capitalizeFirstLetter(product.category)}\n              </Text>\n              <Text>\n                <DarkText>Weight: </DarkText>\n                {product.weight}\n              </Text>\n            </InfoWrapper>\n          </MainContainer>\n        </Container>\n        <BasicModalWindow\n          isOpen={isOpen}\n          onRequestClose={handleCloseModal}\n          style={customStyles}\n          contentLabel=\"Add Product Modal\"\n        >\n          {isFormVisible ? (\n            <AddProductForm\n              product={product}\n              onClose={handleCloseModal}\n              onCloseForm={handleCloseForm}\n              onSuccess={handleAddProductSuccess}\n              onError={handleAddProductError}\n            />\n          ) : (\n            <AddProductSuccess\n              isSuccessOpen={true}\n              onClose={handleCloseSuccess}\n              onCloseSuccess={handleCloseForm}\n              caloriesAdded={caloriesAdded}\n            />\n          )}\n        </BasicModalWindow>\n      </ListItem>\n    );\n  };","import { ProductItem } from './ProductsItem';\nimport {\n  List,\n} from './ProductsList.styled';\n\nexport const ProductsList = ({ products }) => {\n  return (\n    <List>\n      {products.map((product) => {\n        return (\n          <ProductItem  product={product} key={product._id} />\n        );\n      })}\n    </List>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectProducts = state => state.products.products;\n\nexport const selectCategories = state => state.products.categories;\n\nexport const selectIsRecommended = state => state.products.isRecommended;\n\nexport const selectFilter = state => state.products.filter;\n\nexport const selectQuery = state => state.products.filter.query;\n\nexport const selectCategory = state => state.products.filter.category;\n\nexport const selectRecommended = state => state.products.filter.recommended;\n\nexport const selectVisibleProducts = createSelector(\n  [selectProducts, selectFilter, selectIsRecommended],\n  (products, { query, category, recommended }, isRecommended) => {\n    let visibleProducts = [...products];\n    if (recommended !== 'all') {\n      if (recommended === 'recommended') {\n        visibleProducts = isRecommended.recommendedProducts;\n      }\n      if (recommended === 'not recommended') {\n        visibleProducts = isRecommended.notRecommendedProducts;\n      }\n    }\n    if (query !== '') {\n      visibleProducts = visibleProducts.filter(product =>\n        product.title.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    if (category !== '') {\n      visibleProducts = visibleProducts.filter(\n        product => product.category.toLowerCase() === category.toLowerCase()\n      );\n    }\n    return visibleProducts;\n  }\n);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Title } from 'components/Title/Title';\nimport { NotFoundProduct } from 'components/products/NotFoundProduct/NotFoundProduct';\nimport { ProductsFilters } from 'components/products/ProductsFilters/ProductsFilters';\nimport {\n  Container,\n  PageContainer,\n} from 'components/products/ProductsFilters/ProductsFilters.styled';\nimport { ProductsList } from 'components/products/ProductsList/ProductsList';\nimport {\n  fetchAllProducts,\n  fetchCategories,\n  fetchIsRecommended,\n} from '../redux/products/operations';\nimport {\n  selectCategories,\n  selectVisibleProducts,\n} from '../redux/products/productsSelectors';\n\n\nfunction ProductPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n    dispatch(fetchAllProducts());\n    dispatch(fetchIsRecommended());\n  }, [dispatch]);\n\n  const categories = useSelector(selectCategories);\n  const filteredProducts = useSelector(selectVisibleProducts);\n\n  return (\n    <PageContainer className=\"container\">\n      <Container>\n        <Title title=\"Products\" />\n        <ProductsFilters categories={categories} />\n      </Container>\n      {filteredProducts.length !== 0 ? (\n        <ProductsList products={filteredProducts} />\n      ) : (\n        <NotFoundProduct />\n      )}\n    </PageContainer>\n  );\n}\n\nexport default ProductPage;"],"names":["BasicModalWindow","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","border","borderRadius","borderColor","backgroundColor","padding","overlay","zIndex","TitleText","styled","_templateObject","_taggedTemplateLiteral","Title","_ref","title","_jsx","children","Wrapper","Text","_templateObject2","AccentText","_templateObject3","NotFoundProduct","_jsxs","PageContainer","BgImg1x","BgImg2x","Container","Form","InputWrapper","_templateObject4","Input","_templateObject5","ButtonWrapper","_templateObject6","InputButton","_templateObject7","_templateObject8","_templateObject9","ProductsFilters","categories","control","base","state","_objectSpread","width","fontSize","height","menu","color","menuList","gap","maxHeight","overflowY","indicatorSeparator","display","placeholder","singleValue","capitalizeFirstLetter","text","charAt","toUpperCase","slice","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","hiddenBtn","setHiddenBtn","_useState3","_useState4","query","setQuery","onSubmit","e","preventDefault","name","type","value","onChange","target","length","setFilterQuery","onClick","Icon","iconid","Select","evt","setFilterCategory","options","map","category","label","styles","minWidth","theme","setFilterRecommended","maxWidth","el","List","ListItem","HeaderWrapper","DietContainer","DietText","RightSideWrapper","RecommendedContainer","RecommendedWrapper","GreenRound","_templateObject10","_templateObject11","_templateObject12","_templateObject13","Button","_templateObject14","MainContainer","_templateObject15","TitleWrapper","_templateObject16","_templateObject17","InfoWrapper","_templateObject18","DarkText","_templateObject19","ModalForm","WrapperCloseIcon","WrapperInputForm","ProductInput","GrammInput","Span","AddToDiaryButton","CancelButton","AddProductForm","product","onClose","onCloseForm","onSuccess","onError","grams","setGrams","calories","setCalories","productCalories","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","stopPropagation","stop","_x","apply","arguments","_Fragment","CloseIcon","w","h","readOnly","inputMode","gramsValue","trim","isNaN","style","marginLeft","ImageEl","Heading","Calories","ProductButton","WrapperDiaryLink","Link","DiaryLink","AddProductSuccess","isSuccessOpen","caloriesAdded","onCloseSuccess","src","img","alt","to","ArrowForwardIcon","boxSize","ProductItem","isOpen","setIsOpen","setCaloriesAdded","_useState5","_useState6","isFormVisible","setIsFormVisible","handleCloseModal","handleCloseForm","paddingTop","weight","onRequestClose","contentLabel","errorMessage","ProductsList","products","_id","selectCategories","selectVisibleProducts","createSelector","filter","isRecommended","recommended","visibleProducts","_toConsumableArray","recommendedProducts","notRecommendedProducts","toLowerCase","includes","useEffect","fetchCategories","fetchAllProducts","fetchIsRecommended","useSelector","filteredProducts","className"],"sourceRoot":""}