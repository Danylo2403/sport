{"version":3,"file":"static/js/614.7d77549b.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","components/products/NotFoundProduct/NotFoundProduct.styled.js","components/products/NotFoundProduct/NotFoundProduct.jsx","components/products/ProductsFilters/ProductsFilters.styled.js","components/products/ProductsFilters/ProductsFilters.jsx","components/products/ProductsList/ProductsList.styled.js","redux/products/productsSelectors.js","components/products/ProductsList/ProductsList.jsx","pages/ProductsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleText = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n  font-size: 32px;\n  line-height: 44px;\n`;\n","import React from 'react';\nimport { TitleText } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleText>{title}</TitleText>;\n};\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin-top: 64px;\n  max-width: 335px;\n  @media screen and (min-width: 768px) {\n    margin-top: 132px;\n    max-width: 580px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 136px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  line-height: 129%;\n  color: var(--text-info-color);\n`;\n\nconst AccentText = styled.span`\n  color: var(--orange-color);\n`;\n\nexport { Wrapper, Text, AccentText };\n","import React from 'react';\nimport { Wrapper, Text, AccentText } from './NotFoundProduct.styled';\n\nexport const NotFoundProduct = () => {\n  return (\n    <Wrapper>\n      <Text>\n        <AccentText>Sorry, no results were found </AccentText>for the product filters you\n        selected. You may want to consider other search options to find the\n        product you want. Our range is wide and you have the opportunity to find\n        more options that suit your needs.\n        <br />\n        <br />\n      <AccentText>Try changing the search parameters.</AccentText>\n      </Text>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport BgImg1x from '../../../img/products-1x.jpg';\nimport BgImg2x from '../../../img/products-2x.jpg';\n\nconst PageContainer = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    background-image: url(${BgImg1x});\n    background-repeat: no-repeat;\n    background-position: right;\n    background-size: contain;\n    height: 716px;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${BgImg2x});\n    }\n  }\n`;\n\nconst Container = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  max-width: 375px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    max-width: 664px;\n    margin: 32px 0px;\n    justify-content: flex-start;\n    font-size: 16px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 335px;\n  @media screen and (min-width: 768px) {\n    width: 236px;\n  }\n`;\n\nconst Input = styled.input`\n  font-size: 14px;\n  border: none;\n  outline: none;\n  background-color: inherit;\n  color: var(--white-color);\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst InputButton = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 1px;\n  background-color: inherit;\n  border: none;\n`;\n\nconst SelectLevel = styled.select`\n  font-size: 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 173px;\n  background-color: inherit;\n  color: var(--white-color);\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml,%3Csvg%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%3Cpath%20d%3D%22M4.5%206.75L9%2011.25L13.5%206.75%22%20stroke%3D%22%23EFEDE8%22%20stroke-width%3D%222%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20%2F%3E%0A%3C%2Fsvg%3E');\n  background-repeat: no-repeat;\n  background-position: right 14px center;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    width: 204px;\n  }\n`;\n\nconst Option = styled.option`\n  background: #1c1c1c;\n  border: none;\n  outline: none;\n  border-radius: 12px;\n  padding: 14px 32px 14px 14px;\n  margin-bottom: 8px;\n  max-height: 228px;\n`;\n\nexport {\n  PageContainer,\n  Container,\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n  SelectLevel,\n  Option,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\n\nimport {\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n} from './ProductsFilters.styled';\nimport {\n  setFilterQuery,\n  setFilterCategory,\n  setFilterRecommended,\n} from '../../../redux/products/productsSlice';\nimport { Icon } from 'components/Icon/Icon';\n\nexport const ProductsFilters = ({ categories }) => {\n  const recommendedFilters = ['all', 'recommended', 'not recommended'];\n\n  const customStyles = {\n    control: (base, state) => ({\n      ...base,\n      backgroundColor: 'inherit',\n      borderRadius: '12px',\n      border: '1px solid var(--text-info-color)',\n      width: '100%',\n      padding: '6px',\n      fontSize: '14px',\n      height: '50px',\n      '@media screen and (min-width: 768px)': {\n        fontSize: '16px',\n        width: '192px',\n      },\n    }),\n    menu: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n    menuList: base => ({\n      ...base,\n      backgroundColor: '#1c1c1c',\n      borderRadius: '12px',\n      padding: '14px 32px 14px 14px',\n      gap: '8px',\n      maxHeight: '228px',\n      overflowY: 'auto',\n      '&::-webkit-scrollbar': {\n        width: '6px',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        backgroundColor: 'rgba(239, 237, 232, 0.1)',\n        borderRadius: '12px',\n      },\n      color: 'var(--white-color)',\n    }),\n    indicatorSeparator: base => ({\n      ...base,\n      display: 'none',\n    }),\n    placeholder: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n    singleValue: base => ({\n      ...base,\n      color: 'var(--white-color)',\n    }),\n  };\n\n  const capitalizeFirstLetter = text => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n    dispatch(setFilterQuery(''));\n  };\n  const dispatch = useDispatch();\n  const [hiddenBtn, setHiddenBtn] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setHiddenBtn(value.length > 0);\n    setQuery(value);\n    dispatch(setFilterQuery(value));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery('');\n    setHiddenBtn(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <ButtonWrapper>\n          {hiddenBtn && (\n            <InputButton type=\"button\" onClick={clearQuery}>\n              <Icon iconid={'x-red'} width={18} height={18} />\n            </InputButton>\n          )}\n          <InputButton type=\"submit\">\n            <Icon iconid={'search'} width={18} height={18} />\n          </InputButton>\n        </ButtonWrapper>\n      </InputWrapper>\n      <Select\n        onChange={evt => dispatch(setFilterCategory(evt.value))}\n        options={categories.map(category => ({\n          value: category,\n          label: capitalizeFirstLetter(category),\n        }))}\n        name=\"Categories\"\n        placeholder=\"Categories\"\n        styles={customStyles}\n        minWidth=\"146px\"\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n        })}\n      />\n      <Select\n        onChange={evt => dispatch(setFilterRecommended(evt.value))}\n        placeholder=\"All\"\n        styles={customStyles}\n        minWidth=\"173px\"\n        maxWidth=\"204px\"\n        options={recommendedFilters.map(el => ({\n          value: el,\n          label: capitalizeFirstLetter(el),\n        }))}\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n        })}\n        name=\"recommended\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px 16px;\n    max-width: calc(335px * 2 + 16px + 12px + 32px + 8px);\n    max-height: 660px;\n    overflow-y: scroll;\n    scrollbar-color: var(--orange_1-color);\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: var(--orange_1-color);\n      border-radius: 12px;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: rgba(239, 237, 232, 0.1);\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    max-height: 487px;\n    max-width: calc(405px * 2 + 16px * 2 + 8px);\n  }\n`;\n\nconst ListItem = styled.li``;\n\nconst Container = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  padding: 16px;\n  width: 335px;\n\n  background-color: rgba(239, 237, 232, 0.05);\n  @media screen and (min-width: 1440px) {\n    min-width: 405px;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 35px;\n`;\n\nconst DietContainer = styled.div`\n  border-radius: 4px;\n  padding: 5px 7px;\n  width: 41px;\n  height: 24px;\n  background-color: rgba(239, 237, 232, 0.05);\n`;\n\nconst DietText = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  color: #fff;\n`;\n\nconst RightSideWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst RecommendedContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst RecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst NotRecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst GreenRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #419b09;\n`;\n\nconst RedRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #e9101d;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  color: var(--white-color);\n  max-width: 122px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: 49px;\n  height: 18px;\n  padding: 0px;\n  background-color: inherit;\n  border: none;\n  font-size: 14px;\n  color: var(--orange-color);\n`;\n\nconst MainContainer = styled.div``;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nconst TitleText = styled.p`\n  font-size: 20px;\n  color: var(--white-color);\n  margin-left: 16px;\n  max-width: 258px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst DarkText = styled.span`\n  color: rgba(239, 237, 232, 0.4);\n`;\n\nexport {\n  List,\n  ListItem,\n  Container,\n  GreenRound,\n  RedRound,\n  DietContainer,\n  MainContainer,\n  Text,\n  TitleText,\n  TitleWrapper,\n  DarkText,\n  DietText,\n  InfoWrapper,\n  HeaderWrapper,\n  RightSideWrapper,\n  RecommendedWrapper,\n  NotRecommendedWrapper,\n  RecommendedContainer,\n  Button,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectProducts = state => state.products.products;\n\nexport const selectCategories = state => state.products.categories;\n\nexport const selectIsRecommended = state => state.products.isRecommended;\n\nexport const selectFilter = state => state.products.filter;\n\nexport const selectQuery = state => state.products.filter.query;\n\nexport const selectCategory = state => state.products.filter.category;\n\nexport const selectRecommended = state => state.products.filter.recommended;\n\nexport const selectVisibleProducts = createSelector(\n  [selectProducts, selectFilter, selectIsRecommended],\n  (products, { query, category, recommended }, isRecommended) => {\n    let visibleProducts = [...products];\n    if (recommended !== 'all') {\n      if (recommended === 'recommended') {\n        visibleProducts = isRecommended.recommendedProducts;\n      }\n      if (recommended === 'not recommended') {\n        visibleProducts = isRecommended.notRecommendedProducts;\n      }\n    }\n    if (query !== '') {\n      visibleProducts = visibleProducts.filter(product =>\n        product.title.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    if (category !== '') {\n      visibleProducts = visibleProducts.filter(\n        product => product.category.toLowerCase() === category.toLowerCase()\n      );\n    }\n    return visibleProducts;\n  }\n);\n","import {\n  List,\n  ListItem,\n  Container,\n  GreenRound,\n  RedRound,\n  DietContainer,\n  MainContainer,\n  RecommendedContainer,\n  Text,\n  TitleText,\n  TitleWrapper,\n  DarkText,\n  DietText,\n  InfoWrapper,\n  HeaderWrapper,\n  RightSideWrapper,\n  RecommendedWrapper,\n  NotRecommendedWrapper,\n  Button,\n} from './ProductsList.styled';\nimport { Icon } from 'components/Icon/Icon';\nimport { useSelector } from 'react-redux';\nimport { selectIsRecommended } from '../../../redux/products/productsSelectors';\n\nexport const ProductsList = ({ products }) => {\n  const capitalizeFirstLetter = text => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  const recommended = useSelector(selectIsRecommended);\n  const recommendedList = recommended.recommendedProducts;\n  const isRecommended = products.map((product, index) => {\n    if (recommendedList) {\n      return recommendedList.some(item => item._id === product._id);\n    }\n    return [];\n  });\n\n  return (\n    <List>\n      {products.map((product, index) => {\n        return (\n          <ListItem key={product._id}>\n            <Container>\n              <HeaderWrapper>\n                <DietContainer>\n                  <DietText>DIET</DietText>\n                </DietContainer>\n                <RightSideWrapper>\n                  <RecommendedContainer>\n                    {isRecommended[index] ? (\n                      <RecommendedWrapper>\n                        <GreenRound></GreenRound>\n                        <Text>Recommended</Text>\n                      </RecommendedWrapper>\n                    ) : (\n                      <NotRecommendedWrapper>\n                        <RedRound></RedRound>\n                        <Text>Not recommended</Text>\n                      </NotRecommendedWrapper>\n                    )}\n                  </RecommendedContainer>\n                  <Button type=\"button\">\n                    {' '}\n                    Add\n                    <div style={{ paddingTop: '4px', marginLeft: '8px' }}>\n                      <Icon iconid={'arrow'} width={16} height={16} />\n                    </div>\n                  </Button>\n                </RightSideWrapper>\n              </HeaderWrapper>\n              <MainContainer>\n                <TitleWrapper>\n                  <Icon iconid={'circle-running-man'} width={24} height={24} />\n                  <TitleText>{capitalizeFirstLetter(product.title)}</TitleText>\n                </TitleWrapper>\n                <InfoWrapper>\n                  <Text>\n                    <DarkText>Calories: </DarkText>\n                    {product.calories}\n                  </Text>\n                  <Text>\n                    <DarkText>Category: </DarkText>\n                    {capitalizeFirstLetter(product.category)}\n                  </Text>\n                  <Text>\n                    <DarkText>Weight: </DarkText>\n                    {product.weight}\n                  </Text>\n                </InfoWrapper>\n              </MainContainer>\n            </Container>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Title } from 'components/Title/Title';\nimport { NotFoundProduct } from 'components/products/NotFoundProduct/NotFoundProduct';\nimport { ProductsFilters } from 'components/products/ProductsFilters/ProductsFilters';\nimport {\n  Container,\n  PageContainer,\n} from 'components/products/ProductsFilters/ProductsFilters.styled';\nimport { ProductsList } from 'components/products/ProductsList/ProductsList';\nimport {\n  fetchAllProducts,\n  fetchCategories,\n  fetchIsRecommended,\n} from '../redux/products/operations';\nimport {\n  selectCategories,\n  selectVisibleProducts,\n} from '../redux/products/productsSelectors';\n\nfunction ProductPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n    dispatch(fetchAllProducts());\n    dispatch(fetchIsRecommended());\n  }, [dispatch]);\n\n  const categories = useSelector(selectCategories);\n  const filteredProducts = useSelector(selectVisibleProducts);\n\n  return (\n    <PageContainer className=\"container\">\n      <Container>\n        <Title title=\"Products\" />\n        <ProductsFilters categories={categories} />\n      </Container>\n      {filteredProducts.length !== 0 ? (\n        <ProductsList products={filteredProducts} />\n      ) : (\n        <NotFoundProduct />\n      )}\n    </PageContainer>\n  );\n}\n\nexport default ProductPage;\n"],"names":["TitleText","styled","_templateObject","_taggedTemplateLiteral","Title","_ref","title","_jsx","children","Wrapper","Text","_templateObject2","AccentText","_templateObject3","NotFoundProduct","_jsxs","PageContainer","BgImg1x","BgImg2x","Container","Form","InputWrapper","_templateObject4","Input","_templateObject5","ButtonWrapper","_templateObject6","InputButton","_templateObject7","_templateObject8","_templateObject9","ProductsFilters","categories","customStyles","control","base","state","_objectSpread","backgroundColor","borderRadius","border","width","padding","fontSize","height","menu","color","menuList","gap","maxHeight","overflowY","indicatorSeparator","display","placeholder","singleValue","capitalizeFirstLetter","text","charAt","toUpperCase","slice","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","hiddenBtn","setHiddenBtn","_useState3","_useState4","query","setQuery","onSubmit","e","preventDefault","name","type","value","onChange","target","length","setFilterQuery","onClick","Icon","iconid","Select","evt","setFilterCategory","options","map","category","label","styles","minWidth","theme","setFilterRecommended","maxWidth","el","List","ListItem","HeaderWrapper","DietContainer","DietText","RightSideWrapper","RecommendedContainer","RecommendedWrapper","NotRecommendedWrapper","_templateObject10","GreenRound","_templateObject11","RedRound","_templateObject12","_templateObject13","Button","_templateObject14","MainContainer","_templateObject15","TitleWrapper","_templateObject16","_templateObject17","InfoWrapper","_templateObject18","DarkText","_templateObject19","selectCategories","products","selectIsRecommended","isRecommended","selectVisibleProducts","createSelector","filter","recommended","visibleProducts","_toConsumableArray","recommendedProducts","notRecommendedProducts","product","toLowerCase","includes","ProductsList","recommendedList","useSelector","index","some","item","_id","style","paddingTop","marginLeft","calories","weight","useEffect","fetchCategories","fetchAllProducts","fetchIsRecommended","filteredProducts","className"],"sourceRoot":""}