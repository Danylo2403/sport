{"version":3,"file":"static/js/182.69c911f9.chunk.js","mappings":"2OA4FA,UA3EA,WACE,IAAAA,GAAuBC,EAAAA,EAAAA,WAAS,GAAzBC,GAA+BC,EAAAA,EAAAA,GAAAH,EAAA,GAAnB,GACbI,GAAWC,EAAAA,EAAAA,MAEXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KACJG,IAAI,EAAG,yDACPC,IAAI,GAAI,kCACRF,MAAM,eACNG,SAAS,YACZC,SAAUN,EAAAA,KAAaK,SAAS,YAAYF,IAAI,GAAGC,IAAI,MAGzD,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,MAAM,UACNC,UAAU,mFACVC,WAAW,8BACXC,SAAS,UACTC,QAAQ,YAAWC,UAEnBP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACLC,cAAe,CACbd,MAAO,GACPI,SAAU,IAEZW,WAAYlB,EACZmB,SAAU,SAAAC,GACRtB,GAASuB,EAAAA,EAAAA,IAAeD,GAC1B,EAAEL,SAED,SAAAO,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjBC,EAAAA,EAAAA,MAACC,EAAAA,GAAY,CAAAX,SAAA,EACXP,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,QAAOZ,UACpBP,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CACJC,GAAG,QACHC,KAAK,QACLC,YAAY,QACZC,KAAK,QACLC,UAAc,UAASC,OAAA,yBACjBV,EAAQrB,QAAUoB,EAAOpB,OAAS,UAAS,0BAAA+B,OAC3CV,EAAQrB,OAASoB,EAAOpB,OAAS,cAG3CsB,EAAAA,EAAAA,MAAA,SAAOE,QAAQ,WAAUZ,SAAA,EACvBP,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CACJC,GAAG,WACHC,KAAK,WACLC,YAAY,WACZC,KAAMpC,EAAe,OAAS,WAC9BqC,UAAc,UAASC,OAAA,yBACjBV,EAAQjB,WAAagB,EAAOhB,UAAY,UAAS,0BAAA2B,OACjDV,EAAQjB,UAAYgB,EAAOhB,UAAY,WAE9CgB,EAAOhB,UAAYiB,EAAQjB,WAC1BC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CAAApB,UACNP,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAAArB,UACRP,EAAAA,EAAAA,KAAC6B,EAAAA,GAAY,CAACC,UAAU,IAAIR,KAAK,kBAIrCP,EAAOhB,UAAYiB,EAAQjB,WAC3BC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CAAApB,UACNP,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAAArB,SAAC,2BAIjBP,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CAACP,KAAK,SAAQjB,SAAC,cACT,KAKzB,C","sources":["pages/SignInPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { fetchUserLogIn } from '../redux/user/operations';\n\nimport {\n  StyledFormIn,\n  Input,\n  Button,\n  Message,\n  ErrorText,\n} from '../components/AuthLayout/StyledForm.styled';\n\nimport AuthLayout from 'components/AuthLayout/AuthLayout';\n\nfunction SignInPage() {\n  const [showPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const SignIn = Yup.object().shape({\n    email: Yup.string()\n      .min(3, 'The email address must be at least 3 characters long!')\n      .max(20, 'The email address is too long!')\n      .email('Error email')\n      .required('Required'),\n    password: Yup.string().required('Required').min(6).max(20),\n  });\n\n  return (\n    <AuthLayout\n      title=\"Sign in\"\n      paragraph=\"Some text about Welcome! Please enter your credentials to login to the platform:\"\n      bottomText=\"Donâ€™t have an account?\"\n      linkName=\"Sign up\"\n      linkUrl=\"/register\"\n    >\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validation={SignIn}\n        onSubmit={values => {\n          dispatch(fetchUserLogIn(values));\n        }}\n      >\n        {({ errors, touched }) => (\n          <StyledFormIn>\n            <label htmlFor=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                type=\"email\"\n                className={`${'defoult'}\n                    ${touched.email && !errors.email && 'success'}\n                    ${touched.email && errors.email && 'error'}`}\n              />\n            </label>\n            <label htmlFor=\"password\">\n              <Input\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                className={`${'defoult'}\n                    ${touched.password && !errors.password && 'success'}\n                    ${touched.password && errors.password && 'error'}`}\n              />\n              {errors.password && touched.password && (\n                <Message>\n                  <ErrorText>\n                    <ErrorMessage component=\"p\" name=\"password\" />\n                  </ErrorText>\n                </Message>\n              )}\n              {!errors.password && touched.password && (\n                <Message>\n                  <ErrorText>Success password</ErrorText>\n                </Message>\n              )}\n            </label>\n            <Button type=\"submit\">Sign In</Button>\n          </StyledFormIn>\n        )}\n      </Formik>\n    </AuthLayout>\n  );\n}\n\nexport default SignInPage;\n"],"names":["_useState","useState","showPassword","_slicedToArray","dispatch","useDispatch","SignIn","Yup","shape","email","min","max","required","password","_jsx","AuthLayout","title","paragraph","bottomText","linkName","linkUrl","children","Formik","initialValues","validation","onSubmit","values","fetchUserLogIn","_ref","errors","touched","_jsxs","StyledFormIn","htmlFor","Input","id","name","placeholder","type","className","concat","Message","ErrorText","ErrorMessage","component","Button"],"sourceRoot":""}