{"version":3,"file":"static/js/259.a082a90d.chunk.js","mappings":"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","sources":["components/AddExerciseSuccess/customStylesModal.js","components/Icon/Icon.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/products/ProductsFilters/ProductsFilters.styled.js","redux/products/productsSelectors.js","components/products/ProductsFilters/selectCustomStyles.js","components/products/ProductsFilters/ProductsFilters.jsx","API/productsAPI.js","components/products/ProductsList/ProductsList.styled.js","components/AddProductForm/AddProductForm.styled.js","components/AddProductForm/AddProductForm.jsx","components/AddProductSuccess/AddProductSuccess.styled.js","components/AddProductSuccess/AddProductSuccess.jsx","components/products/ProductsList/ProductsItem.jsx","components/products/NotFoundProduct/NotFoundProduct.styled.js","components/products/NotFoundProduct/NotFoundProduct.jsx","components/products/ProductsList/ProductsList.jsx","pages/ProductsPage.jsx"],"sourcesContent":["import Modal from 'react-modal'\nconst BasicModalWindow = Modal;\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    borderRadius: '12px',\n    borderColor: 'rgba(239, 237, 232, 0.2)',\n    backgroundColor: 'rgba(16, 16, 15, 1)',\n    padding: 0,\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.707)',\n    zIndex: 1001,\n  },\n};\n\nexport {BasicModalWindow  ,customStyles}","import sprite from '../../img/pulse-icons.svg';\n\nimport React from 'react';\n\nexport const Icon = ({ width, height, iconid }) => {\n  return (\n    <svg width={width} height={height}>\n      <use href={`${sprite}#${iconid}`}></use>\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleText = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n  font-size: 32px;\n  line-height: 44px;\n`;\n","import React from 'react';\nimport { TitleText } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleText>{title}</TitleText>;\n};\n","import styled from 'styled-components';\nimport BgImg1x from '../../../img/products-1x.jpg';\nimport BgImg2x from '../../../img/products-2x.jpg';\n\nconst PageContainer = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    background-image: url(${BgImg1x});\n    background-repeat: no-repeat;\n    background-position: right;\n    background-size: contain;\n    height: 716px;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${BgImg2x});\n    }\n  }\n`;\n\nconst Container = styled.div`\n  @media screen and (min-width: 1440px) {\n    max-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  max-width: 375px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    max-width: 664px;\n    margin: 32px 0px;\n    justify-content: flex-start;\n    font-size: 16px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 335px;\n  height: 46px;\n  &:hover {\n    border: 1px solid var(--orange-color);\n  }\n  &:focus {\n    border: 1px solid var(--orange-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 236px;\n    height: 52px;\n  }\n`;\n\nconst Input = styled.input`\n  font-size: 14px;\n  line-height: 1.28;\n  border: none;\n  outline: none;\n  background-color: inherit;\n  color: var(--white-color);\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst InputButton = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 1px;\n  background-color: inherit;\n  border: none;\n`;\n\nconst SelectLevel = styled.select`\n  font-size: 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  padding: 14px;\n  width: 173px;\n  background-color: inherit;\n  color: var(--white-color);\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml,%3Csvg%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%3Cpath%20d%3D%22M4.5%206.75L9%2011.25L13.5%206.75%22%20stroke%3D%22%23EFEDE8%22%20stroke-width%3D%222%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20%2F%3E%0A%3C%2Fsvg%3E');\n  background-repeat: no-repeat;\n  background-position: right 14px center;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    width: 204px;\n  }\n`;\n\nconst Option = styled.option`\n  background: #1c1c1c;\n  border: none;\n  outline: none;\n  border-radius: 12px;\n  padding: 14px 32px 14px 14px;\n  margin-bottom: 8px;\n  max-height: 228px;\n`;\n\nexport {\n  PageContainer,\n  Container,\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n  SelectLevel,\n  Option,\n};\n","export const selectCategories = state => state.products.categories;\n\nexport const selectQuery = state => state.products.filter.query;\n\nexport const selectCategory = state => state.products.filter.category;\n\nexport const selectRecommended = state => state.products.filter.recommended;\n","export const customStyles = {\n  control: provided => ({\n    ...provided,\n\n    cursor: 'pointer',\n    backgroundColor: '#1c1c1c',\n    appearance: 'none',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    lineHeight: 1.28,\n  }),\n  option: (provided, { isFocused, isSelected }) => ({\n    ...provided,\n    fontSize: '14px',\n    lineHeight: 1.28,\n    backgroundColor: isSelected\n      ? 'transparent'\n      : isFocused\n      ? 'transparent'\n      : '#1c1c1c',\n    color: isSelected ? 'var(--orange-color)' : 'var(--white-color)',\n    '@media screen and (min-width: 768px)': {\n      fontSize: '16px',\n      lineHeight: '1.5',\n    },\n  }),\n  menu: provided => ({\n    ...provided,\n    backgroundColor: '#1c1c1c',\n    padding: '0px 7px 14px 0px',\n  }),\n  singleValue: provided => ({\n    ...provided,\n    color: 'var(--white-color)',\n  }),\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    color: 'var(--white-color)',\n  }),\n  container: provided => ({\n    ...provided,\n    borderRadius: '12px',\n    outline: 'none',\n  }),\n  menuList: base => ({\n    ...base,\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '6px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'rgba(239, 237, 232, 0.1)',\n      borderRadius: '12px',\n    },\n  }),\n  '&:focus': {\n    border: '1px solid var(--orange-color)',\n  },\n};\n\nexport const firstSelectStyles = {\n  ...customStyles,\n  control: (defaultStyles, { isFocused }) => ({\n    ...defaultStyles,\n    backgroundColor: 'var(--primary-black-color)',\n    border: '1px solid var(--text-info-color)',\n    borderColor: isFocused ? 'var(--orange-color)' : 'var(--text-info-color)',\n    '&:hover': {\n      border: '1px solid var(--orange-color)',\n    },\n\n    '@media screen and (min-width: 375px)': {\n      width: '146px',\n      height: '46px',\n      fontSize: '14px',\n      lineHeight: '1.28',\n    },\n\n    '@media screen and (min-width: 768px)': {\n      width: '192px',\n      height: '52px',\n      fontSize: '16px',\n      lineHeight: '1.5',\n    },\n  }),\n};\n\nexport const secondSelectStyles = {\n  ...customStyles,\n  control: (defaultStyles, { isFocused }) => ({\n    ...defaultStyles,\n    backgroundColor: 'var(--primary-black-color)',\n    border: '1px solid var(--text-info-color)',\n    borderColor: isFocused ? 'var(--orange-color)' : 'var(--text-info-color)',\n    '&:hover': {\n      border: '1px solid var(--orange-color)',\n    },\n\n    '@media screen and (min-width: 375px)': {\n      width: '173px',\n      height: '46px',\n      fontSize: '14px',\n      lineHeight: '1.28',\n    },\n\n    '@media screen and (min-width: 768px)': {\n      width: '204px',\n      height: '52px',\n      fontSize: '16px',\n      lineHeight: '1.5',\n    },\n  }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\n\nimport {\n  Form,\n  InputWrapper,\n  Input,\n  ButtonWrapper,\n  InputButton,\n} from './ProductsFilters.styled';\nimport {\n  setFilterQuery,\n  setFilterCategory,\n  setFilterRecommended,\n} from '../../../redux/products/productsSlice';\nimport { Icon } from 'components/Icon/Icon';\nimport { fetchCategories } from '../../../redux/products/operations';\nimport { selectCategories } from '../../../redux/products/productsSelectors';\nimport { firstSelectStyles, secondSelectStyles } from './selectCustomStyles';\n\nexport const ProductsFilters = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const categories = useSelector(selectCategories);\n\n  const capitalizeFirstLetter = text => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  const recommendedFilters = [\n    { value: 'all', label: 'All' },\n    { value: 'true', label: 'Recommended ' },\n    { value: 'false', label: 'Not recommended' },\n  ];\n\n  const categoriesList = [\n    { value: 'all', label: 'All categories' },\n    ...categories.map(category => ({\n      value: category,\n      label: capitalizeFirstLetter(category),\n    })),\n  ];\n\n  const clearQuery = () => {\n    setQuery('');\n    dispatch(setFilterQuery(''));\n    setHiddenBtn(false);\n  };\n  const [hiddenBtn, setHiddenBtn] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setHiddenBtn(value.length > 0);\n    setQuery(value);\n    dispatch(setFilterQuery(value));\n  };\n\n  const handleSubmit = e => {\n    const value = e.target.query.value;\n    e.preventDefault();\n    setHiddenBtn(value.length > 0);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <ButtonWrapper>\n          {hiddenBtn && (\n            <InputButton type=\"button\" onClick={clearQuery}>\n              <Icon iconid={'x-red'} width={18} height={18} />\n            </InputButton>\n          )}\n          <InputButton type=\"submit\">\n            <Icon iconid={'search'} width={18} height={18} />\n          </InputButton>\n        </ButtonWrapper>\n      </InputWrapper>\n      <Select\n        onChange={evt => dispatch(setFilterCategory(evt.value))}\n        options={categoriesList}\n        name=\"Categories\"\n        placeholder=\"Categories\"\n        styles={firstSelectStyles}\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n          colors: {\n            ...theme.colors,\n            primary50: 'rgba(239, 237, 232, 0.1)',\n            primary: 'var(--orange-color)',\n          },\n        })}\n      />\n      <Select\n        onChange={evt => dispatch(setFilterRecommended(evt.value))}\n        placeholder=\"All\"\n        styles={secondSelectStyles}\n        options={recommendedFilters}\n        theme={theme => ({\n          ...theme,\n          borderRadius: '12px',\n          colors: {\n            ...theme.colors,\n            primary50: 'rgba(239, 237, 232, 0.1)',\n            primary: 'var(--orange-color)',\n          },\n        })}\n        name=\"recommended\"\n      />\n    </Form>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `\n https://power-pulse-back.onrender.com/`;\n \n export async function fetchProducts(query, category, recommended) {\n    try {\n      const queryParams = [];\n      if (recommended && recommended !== 'all') {\n        queryParams.push(`recommended=${recommended}`);\n      }\n      if (category && category !== 'all') {\n        queryParams.push(`category=${category}`);\n      }\n      if (query && query.trim() !== '') {\n        queryParams.push(`keyword=${query}`);\n      }\n      const queryString = queryParams.join('&');\n      const response = await axios.get(`products/filter?${queryString}`);\n      if (response.data?.products) {\n        return response.data?.products;\n      }\n      return response.data;\n    } catch (e) {\n      console.error('Error fetching products:', e.message);\n      return null;\n    }\n  }","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px 16px;\n    max-width: calc(335px * 2 + 16px + 12px + 32px + 8px);\n    max-height: 660px;\n    overflow-y: scroll;\n    scrollbar-color: var(--orange_1-color);\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: var(--orange_1-color);\n      border-radius: 12px;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: rgba(239, 237, 232, 0.1);\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    max-height: 487px;\n    max-width: calc(405px * 2 + 16px * 2 + 8px);\n  }\n`;\n\nconst ListItem = styled.li``;\n\nconst Container = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  padding: 16px;\n  width: 335px;\n\n  background-color: rgba(239, 237, 232, 0.05);\n  @media screen and (min-width: 1440px) {\n    min-width: 405px;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 35px;\n`;\n\nconst DietContainer = styled.div`\n  border-radius: 4px;\n  padding: 5px 7px;\n  width: 41px;\n  height: 24px;\n  background-color: rgba(239, 237, 232, 0.05);\n`;\n\nconst DietText = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.16;\n  color: #fff;\n`;\n\nconst RightSideWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst RecommendedContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst RecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst NotRecommendedWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst GreenRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #419b09;\n`;\n\nconst RedRound = styled.div`\n  border-radius: 10px;\n  width: 14px;\n  height: 14px;\n  background-color: #e9101d;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  line-height: 1.5;\n  color: var(--white-color);\n  max-width: 122px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: 49px;\n  height: 18px;\n  padding: 0px;\n  background-color: inherit;\n  border: none;\n  font-size: 14px;\n  line-height: 1.28;\n  color: var(--orange-color);\n`;\n\nconst MainContainer = styled.div``;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nconst TitleText = styled.p`\n  font-size: 20px;\n  line-height: 1.2;\n  color: var(--white-color);\n  margin-left: 16px;\n  max-width: 258px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1.3;\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst DarkText = styled.span`\n  color: rgba(239, 237, 232, 0.4);\n`;\n\nexport {\n  List,\n  ListItem,\n  Container,\n  GreenRound,\n  RedRound,\n  DietContainer,\n  MainContainer,\n  Text,\n  TitleText,\n  TitleWrapper,\n  DarkText,\n  DietText,\n  InfoWrapper,\n  HeaderWrapper,\n  RightSideWrapper,\n  RecommendedWrapper,\n  NotRecommendedWrapper,\n  RecommendedContainer,\n  Button,\n};\n","import styled from 'styled-components';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    borderRadius: '12px',\n    borderColor: 'rgba(239, 237, 232, 0.2)',\n    backgroundColor: 'rgba(16, 16, 15, 1)',\n    padding: 0,\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.707)',\n    zIndex: 1001,\n  },\n};\n\nconst ModalForm = styled.form`\n  padding: 48px 24px;\n  box-sizing: border-box;\n  color: #EFEDE8;\n  max-width: 100%;\n\n  height: auto;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    padding: 48px 32px;\n  }\n`;\n\nconst WrapperCloseIcon = styled.div`\nposition: fixed;\ntop: 18px;\nright: 18px;\ncursor: pointer;\n\n`\n\nconst WrapperInputForm = styled.div`\nwidth: 100%;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    display: flex;\n    gap: 16px;\n  }\n`\n\nconst ProductInput = styled.input`\n  width: 100%;\n  height: 34px;\n  border-radius: 12px;\n  border: 1px solid;\n  border-color: rgba(230, 83, 60, 1);\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(239, 237, 232, 0.3);\n  padding: 8px 14px 8px 14px;\n  margin-bottom: 16px;\n  background-color: transparent;\n  outline: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    width: 244px;\n    font-size: 16px;\n    line-height: 1.5;\n    height: 40px;\n  }\n`;\n\nconst GrammInput = styled.input`\n  width: 287px;\n  height: 34px;\n  border-radius: 12px;\n  border: 1px solid;\n  border-color: rgba(230, 83, 60, 1);\n  color: #EFEDE8 ;\n  font-size: 14px;\n  line-height: 1.28;\n  padding: 8px 60px 8px 14px;\n  margin-bottom: 16px;\n  background-color: transparent;\n  outline: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    width: 155px;\n    font-size: 16px;\n    line-height: 1.5;\n    height: 40px;\n  }\n`;\n\n\nconst Span = styled.span`\n  font-size: 12px;\n  line-height : 1.5;\n  color: rgba(239, 237, 232, 0.4);\n  position: fixed;\n  right: 42px;\n  top: 115px;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    top: 68px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  line-height: 1.5;\n  color: rgba(239, 237, 232, 0.3);\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    margin-bottom: 64px;\n  }\n\n`;\n\nconst AddToDiaryButton = styled.button`\n  width: 151px;\n  height: 42px;\n  font-size: 16px;\n  line-height: 1.12;\n  border-radius: 12px;\n  background-color: rgba(230, 83, 60, 1);\n  padding: 12px 32px;\n  color: #EFEDE8;\n  border: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n    line-height: 1.5;\n    padding: 14px 32px;\n    height: 52px;\n  }\n`;\n\nconst CancelButton = styled.button`\nmargin: 0;\n  width: 121px;\n  height: 42px;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  margin-left: 14px;\n  padding: 12px 36px;\n  font-size: 16px;\n  line-height: 1.12;\n  color: #EFEDE8;\n  background-color: transparent;\n\n  \n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\n  width: 142px;\n  height: 52px;\nfont-size: 20px;\nline-height: 1.2;\npadding: 14px 40px;\nmargin-left: 16px;\n  }\n`;\n\nexport {\n  AddToDiaryButton,\n  CancelButton,\n  customStyles,\n  ModalForm,\n  ProductInput,\n  GrammInput,\n  Text,\n  Span,\n  WrapperCloseIcon,\n  WrapperInputForm\n};\n","\nimport React, { useState } from 'react';\nimport { CloseIcon } from '@chakra-ui/icons';\n\nimport {\n  CancelButton,\n  AddToDiaryButton,\n  ModalForm,\n  ProductInput,\n  GrammInput,\n  Text,\n  Span,\n  WrapperCloseIcon,\n  WrapperInputForm\n} from './AddProductForm.styled';\n\nexport const AddProductForm = ({ product, onClose, onCloseForm, onSuccess, onError }) => {\n  const [grams, setGrams] = useState('');\n  const [calories, setCalories] = useState(0);\n\n  const { title, calories: productCalories } = product;\n\n  const handleGramsChange = e => {\n    const gramsValue = e.target.value;\n\n    setGrams(gramsValue.trim());\n    if (!isNaN(gramsValue)) {\n      const calculatedCalories = (gramsValue * productCalories) / 100;\n      setCalories(calculatedCalories);\n    } else {\n      setCalories(0);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n        onCloseForm()\n        onSuccess(calories);\n\n  };\n\n  return (\n    <>\n      <WrapperCloseIcon onClick={onClose}>\n        <CloseIcon w={11} h={11} />\n      </WrapperCloseIcon>\n      <ModalForm onSubmit={handleSubmit}>\n        <WrapperInputForm>\n          <ProductInput type=\"text\" value={title} readOnly />\n          <div>\n            <GrammInput\n              type=\"number\"\n              inputMode=\"numeric\"\n              value={grams}\n              onChange={handleGramsChange}\n            />\n            <Span>grams</Span>\n          </div>\n        </WrapperInputForm>\n\n        <Text>\n          Calories:\n          <span style={{ color: 'white', marginLeft: '4px' }}>{calories}</span>\n        </Text>\n          <AddToDiaryButton type=\"submit\">\n            Add to diary\n          </AddToDiaryButton>\n          <CancelButton type=\"button\" onClick={onClose}>\n            Cancel\n          </CancelButton>\n      </ModalForm>\n    </>\n  );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Wrapper = styled.div`\n  padding: 48px 89px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\npadding: 64px 136px 64px 137px;\n  }\n`;\n\nconst WrapperCloseIcon  = styled.div`\nposition: fixed;\ntop: 18px;\nright: 18px;\ncursor: pointer;\n`\n\nconst ImageEl = styled.img`\n  margin-bottom: 16px;\n  width: 123px;\n  height: 84px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nmargin-bottom: 32px;\n  }\n`;\nconst Heading = styled.h3`\n  font-size: 24px;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nconst Calories = styled.p`\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(239, 237, 232, 0.3);\n  margin-bottom: 24px;\n\n  span {\n    color: rgba(230, 83, 60, 1);\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nmargin-bottom: 32px;\n  }\n`;\n\nconst ProductButton = styled.button`\n  display: block;\n  border: none;\n  width: 157px;\n  height: 42px;\n\n  color: #EFEDE8;\n  font-size: 16px;\n  line-height: 1.12;\n  border-radius: 12px;\n  background-color: rgba(230, 83, 60, 1);\n  padding: 12px 32px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px)  {\nwidth: 157px;\nheight: 52px;\n  }\n`;\n\nconst WrapperDiaryLink = styled(Link)`\ndisplay: flex;\nalign-items : center ;\ntext-decoration: none;\ncursor: pointer;\n`\n\nconst DiaryLink = styled.div`\n  color: rgba(239, 237, 232, 0.3);\n  text-decoration: none;\n  /* margin-right: 8px; */\n  font-size: 14px;\n  line-height: 1.28;\n`;\n\n\nexport { Wrapper, DiaryLink, ImageEl, Heading, Calories, ProductButton , WrapperCloseIcon , WrapperDiaryLink };\n","import img from '../../img/avocado-1x.png';\nimport { CloseIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport {\n  Wrapper,\n  ImageEl,\n  DiaryLink,\n  Heading,\n  Calories,\n  ProductButton,\n  WrapperCloseIcon,\n  WrapperDiaryLink,\n} from './AddProductSuccess.styled';\n\nexport const AddProductSuccess = ({\n  isSuccessOpen,\n  onClose,\n  caloriesAdded,\n  onCloseSuccess\n}) => {\n  return (\n    <>\n        <WrapperCloseIcon onClick={onClose}>\n          <CloseIcon w={11} h={11} />\n        </WrapperCloseIcon>\n        <Wrapper>\n          <ImageEl src={img} alt=\"Success\" />\n          <Heading>Well done</Heading>\n\n          <Calories>\n            Calories:<span> {caloriesAdded}</span>\n          </Calories>\n          <ProductButton onClick={onClose}>Next product</ProductButton>\n          <WrapperDiaryLink to=\"/diary\">\n            <DiaryLink>To the diary </DiaryLink>\n            <div>\n              <ArrowForwardIcon boxSize={24} color=\"rgba(239, 237, 232, 0.3)\" />\n            </div>\n          </WrapperDiaryLink>\n        </Wrapper>\n    </>\n  );\n};\n","import {\n  ListItem,\n  Container,\n  GreenRound,\n  DietContainer,\n  MainContainer,\n  RecommendedContainer,\n  Text,\n  TitleText,\n  TitleWrapper,\n  DarkText,\n  DietText,\n  InfoWrapper,\n  HeaderWrapper,\n  RightSideWrapper,\n  RecommendedWrapper,\n  Button,\n  RedRound,\n} from './ProductsList.styled';\n\nimport {\n  customStyles,\n  BasicModalWindow,\n} from '../../AddExerciseSuccess/customStylesModal';\n\nimport { AddProductForm } from '../../AddProductForm/AddProductForm';\nimport { AddProductSuccess } from '../../AddProductSuccess/AddProductSuccess';\nimport { useState } from 'react';\nimport { Icon } from '../../Icon/Icon';\n\nBasicModalWindow.setAppElement('#root');\n\nexport const ProductItem = ({ product }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [caloriesAdded, setCaloriesAdded] = useState(0);\n  // const [error, setError] = useState(null);\n  const [isFormVisible, setIsFormVisible] = useState(true);\n\n  const handleOpenModal = () => {\n    setIsOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleCloseSuccess = () => {\n    setIsFormVisible(!isFormVisible);\n    setIsOpen(false);\n  };\n\n  const handleCloseForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  const handleAddProductSuccess = calories => {\n    // POST на бек\n    setCaloriesAdded(calories);\n  };\n\n  const handleAddProductError = errorMessage => {\n    // setError(errorMessage);\n  };\n\n  const capitalizeFirstLetter = text => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  const recommended = true;\n\n  return (\n    <ListItem>\n      <Container>\n        <HeaderWrapper>\n          <DietContainer>\n            <DietText>DIET</DietText>\n          </DietContainer>\n          <RightSideWrapper>\n            <RecommendedContainer>\n              {recommended ? (\n                <RecommendedWrapper>\n                  <GreenRound></GreenRound>\n                  <Text>Recommended</Text>\n                </RecommendedWrapper>\n              ) : (\n                <RecommendedWrapper>\n                  <RedRound></RedRound>\n                  <Text>Not recommended</Text>\n                </RecommendedWrapper>\n              )}\n            </RecommendedContainer>\n            <Button type=\"button\" onClick={handleOpenModal}>\n              Add\n              <div style={{ paddingTop: '4px', marginLeft: '8px' }}>\n                <Icon iconid={'arrow'} width={16} height={16} />\n              </div>\n            </Button>\n          </RightSideWrapper>\n        </HeaderWrapper>\n        <MainContainer>\n          <TitleWrapper>\n            <Icon iconid={'circle-running-man'} width={24} height={24} />\n            <TitleText>{capitalizeFirstLetter(product.title)}</TitleText>\n          </TitleWrapper>\n          <InfoWrapper>\n            <Text>\n              <DarkText>Calories: </DarkText>\n              {product.calories}\n            </Text>\n            <Text>\n              <DarkText>Category: </DarkText>\n              {capitalizeFirstLetter(product.category)}\n            </Text>\n            <Text>\n              <DarkText>Weight: </DarkText>\n              {product.weight}\n            </Text>\n          </InfoWrapper>\n        </MainContainer>\n      </Container>\n      <BasicModalWindow\n        isOpen={isOpen}\n        onRequestClose={handleCloseModal}\n        style={customStyles}\n        contentLabel=\"Add Product Modal\"\n      >\n        {isFormVisible ? (\n          <AddProductForm\n            product={product}\n            onClose={handleCloseModal}\n            onCloseForm={handleCloseForm}\n            onSuccess={handleAddProductSuccess}\n            onError={handleAddProductError}\n          />\n        ) : (\n          <AddProductSuccess\n            isSuccessOpen={true}\n            onClose={handleCloseSuccess}\n            onCloseSuccess={handleCloseForm}\n            caloriesAdded={caloriesAdded}\n          />\n        )}\n      </BasicModalWindow>\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin-top: 64px;\n  max-width: 335px;\n  @media screen and (min-width: 768px) {\n    margin-top: 132px;\n    max-width: 580px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 136px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  line-height: 129%;\n  color: var(--text-info-color);\n`;\n\nconst AccentText = styled.span`\n  color: var(--orange-color);\n`;\n\nexport { Wrapper, Text, AccentText };\n","import React from 'react';\nimport { Wrapper, Text, AccentText } from './NotFoundProduct.styled';\n\nexport const NotFoundProduct = () => {\n  return (\n    <Wrapper>\n      <Text>\n        <AccentText>Sorry, no results were found </AccentText>for the product filters you\n        selected. You may want to consider other search options to find the\n        product you want. Our range is wide and you have the opportunity to find\n        more options that suit your needs.\n        <br />\n        <br />\n      <AccentText>Try changing the search parameters.</AccentText>\n      </Text>\n    </Wrapper>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { fetchProducts } from 'API/productsAPI';\nimport { ProductItem } from './ProductsItem';\nimport { NotFoundProduct } from '../NotFoundProduct/NotFoundProduct';\nimport {\n  selectCategory,\n  selectQuery,\n  selectRecommended,\n} from '../../../redux/products/productsSelectors';\nimport { List } from './ProductsList.styled';\n\nexport const ProductsList = () => {\n  const query = useSelector(selectQuery);\n  const category = useSelector(selectCategory);\n  const recommended = useSelector(selectRecommended);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    async function getProducts() {\n      try {\n        const products = await fetchProducts(query, category, recommended);\n        setProducts(products);\n      } catch (error) {}\n    }\n    getProducts();\n  }, [query, category, recommended]);\n\n  return (\n    <>\n      <List>\n        {products && products.length !== 0 ? (\n          products.map(product => {\n            return <ProductItem product={product} key={product._id} />;\n          })\n        ) : (\n          <NotFoundProduct />\n        )}\n      </List>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Title } from 'components/Title/Title';\nimport { ProductsFilters } from 'components/products/ProductsFilters/ProductsFilters';\nimport {\n  Container,\n  PageContainer,\n} from 'components/products/ProductsFilters/ProductsFilters.styled';\nimport { ProductsList } from 'components/products/ProductsList/ProductsList';\n\nfunction ProductPage() {\n\n  return (\n    <PageContainer className=\"container\">\n      <Container>\n        <Title title=\"Products\" />\n        <ProductsFilters />\n      </Container>\n        <ProductsList />\n    </PageContainer>\n  );\n}\n\nexport default ProductPage;"],"names":["BasicModalWindow","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","border","borderRadius","borderColor","backgroundColor","padding","overlay","zIndex","Icon","_ref","width","height","iconid","_jsx","children","href","concat","sprite","TitleText","styled","_templateObject","_taggedTemplateLiteral","Title","title","PageContainer","BgImg1x","BgImg2x","Container","_templateObject2","Form","_templateObject3","InputWrapper","_templateObject4","Input","_templateObject5","ButtonWrapper","_templateObject6","InputButton","_templateObject7","_templateObject8","_templateObject9","selectCategories","state","products","categories","selectQuery","filter","query","selectCategory","category","selectRecommended","recommended","control","provided","_objectSpread","cursor","appearance","WebkitAppearance","MozAppearance","lineHeight","option","isFocused","isSelected","fontSize","color","menu","singleValue","indicatorSeparator","display","dropdownIndicator","container","outline","menuList","base","overflowY","firstSelectStyles","defaultStyles","_ref2","secondSelectStyles","_ref3","ProductsFilters","dispatch","useDispatch","useEffect","fetchCategories","useSelector","categoriesList","value","label","_toConsumableArray","map","text","charAt","toUpperCase","slice","_useState","useState","_useState2","_slicedToArray","hiddenBtn","setHiddenBtn","_useState3","_useState4","setQuery","_jsxs","onSubmit","e","target","preventDefault","length","name","type","placeholder","onChange","setFilterQuery","onClick","Select","evt","setFilterCategory","options","styles","theme","colors","primary50","primary","setFilterRecommended","fetchProducts","_x","_x2","_x3","_fetchProducts","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_response$data","queryParams","queryString","response","_response$data2","_context","prev","next","push","trim","join","axios","sent","data","abrupt","t0","console","error","message","stop","List","ListItem","HeaderWrapper","DietContainer","DietText","RightSideWrapper","RecommendedContainer","RecommendedWrapper","GreenRound","_templateObject10","_templateObject11","Text","_templateObject12","_templateObject13","Button","_templateObject14","MainContainer","_templateObject15","TitleWrapper","_templateObject16","_templateObject17","InfoWrapper","_templateObject18","DarkText","_templateObject19","ModalForm","WrapperCloseIcon","WrapperInputForm","ProductInput","GrammInput","Span","AddToDiaryButton","CancelButton","AddProductForm","product","onClose","onCloseForm","onSuccess","onError","grams","setGrams","calories","setCalories","productCalories","handleSubmit","stopPropagation","_Fragment","CloseIcon","w","h","readOnly","inputMode","gramsValue","isNaN","style","marginLeft","Wrapper","ImageEl","Heading","Calories","ProductButton","WrapperDiaryLink","Link","DiaryLink","AddProductSuccess","isSuccessOpen","caloriesAdded","onCloseSuccess","src","img","alt","to","ArrowForwardIcon","boxSize","ProductItem","isOpen","setIsOpen","setCaloriesAdded","_useState5","_useState6","isFormVisible","setIsFormVisible","handleCloseModal","handleCloseForm","capitalizeFirstLetter","paddingTop","weight","onRequestClose","contentLabel","errorMessage","AccentText","NotFoundProduct","ProductsList","setProducts","_getProducts","_products","getProducts","_id","className"],"sourceRoot":""}